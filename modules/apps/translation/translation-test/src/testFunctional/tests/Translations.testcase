@component-name = "portal-collaboration"
definition {

	property portal.release = "true";
	property portal.upstream = "true";
	property testray.main.component.name = "Translations Management";

	setUp {
		TestCase.setUpPortalInstance();

		User.firstLoginPG();
	}

	tearDown {
		var testPortalInstance = PropsUtil.get("test.portal.instance");

		if ("${testPortalInstance}" == "true") {
			PortalInstances.tearDownCP();
		}
		else {
			User.logoutPG();
		}
	}

	@description = "This ensures that the translation in the web content will not be retained after deleting the translation in draft status from the app."
	@priority = "4"
	@refactorneeded
	test DeleteDraftTranslation {
		JSONWebcontent.addWebContent(
			content = "WC WebContent Content",
			description = "Description",
			groupName = "Guest",
			title = "WC WebContent Title");

		WebContentNavigator.openWebContentAdmin(siteURLKey = "guest");

		Translations.gotoTranslate(webContentTitle = "WC WebContent Title");

		Translations.changeTargetLocale(
			currentTargetLocale = "ar-SA",
			newTargetLocale = "es-ES");

		Translations.viewBaseFields(
			webContentContent = "WC WebContent Content",
			webContentTitle = "WC WebContent Title");

		Translations.translateFields(
			webContentContent = "WC WebContent Contenido",
			webContentDescription = "WC WebContent Descripción",
			webContentTitle = "WC WebContent Título");

		PortletEntry.saveAsDraft();

		Translations.openTranslationAdmin(siteURLKey = "guest");

		Translations.viewTranslationEntry(
			language = "es-ES",
			status = "Draft",
			title = "Translation of WC WebContent Title to es-ES");

		LexiconEntry.delete(
			confirmationText = "Are you sure you want to delete this? It will be deleted immediately.",
			rowEntry = "Translation of WC WebContent Title to es-ES");

		AssertElementNotPresent(
			key_rowEntry = "Translation of WC WebContent Title to es-ES",
			locator1 = "ContentRow#ENTRY_CONTENT_ENTRY_NAME");

		WebContentNavigator.openWebContentAdmin(siteURLKey = "guest");

		WebContentNavigator.gotoEditCP(webContentTitle = "WC WebContent Title");

		Click.clickNoMouseOver(
			key_currentLocale = StringUtil.lowerCase("en-US"),
			locator1 = "Button#TRANSLATIONS_LOCALIZATION");

		AssertTextEquals(
			key_localizedLanguage = "es-ES",
			locator1 = "Translation#TRANSLATION_STATUS_TITLE",
			value1 = "Untranslated");
	}

	@description = "This ensures that the translation in the web content will not be retained after deleting the translation in pending status from the app."
	@priority = "4"
	@refactorneeded
	test DeletePendingTranslation {
		JSONWebcontent.addWebContent(
			content = "WC WebContent Content",
			description = "Description",
			groupName = "Guest",
			title = "WC WebContent Title");

		Workflow.openWorkflowAdmin(siteURLKey = "guest");

		Workflow.configureWorkflow(
			workflowDefinition = "Single Approver",
			workflowResourceValue = "Translation");

		WebContentNavigator.openWebContentAdmin(siteURLKey = "guest");

		Translations.gotoTranslate(webContentTitle = "WC WebContent Title");

		Translations.changeTargetLocale(
			currentTargetLocale = "ar-SA",
			newTargetLocale = "es-ES");

		Translations.viewBaseFields(
			webContentContent = "WC WebContent Content",
			webContentTitle = "WC WebContent Title");

		Translations.translateFields(
			webContentContent = "WC WebContent Contenido",
			webContentDescription = "WC WebContent Descripción",
			webContentTitle = "WC WebContent Título");

		AssertClick(
			locator1 = "Button#SUBMIT_FOR_PUBLICATION",
			value1 = "Submit for Publication");

		Alert.viewSuccessMessage();

		Translations.openTranslationAdmin(siteURLKey = "guest");

		Translations.viewTranslationEntry(
			language = "es-ES",
			status = "Pending",
			title = "Translation of WC WebContent Title to es-ES");

		LexiconEntry.delete(
			confirmationText = "Are you sure you want to delete this? It will be deleted immediately.",
			rowEntry = "Translation of WC WebContent Title to es-ES");

		AssertElementNotPresent(
			key_rowEntry = "Translation of WC WebContent Title to es-ES",
			locator1 = "ContentRow#ENTRY_CONTENT_ENTRY_NAME");

		WebContentNavigator.openWebContentAdmin(siteURLKey = "guest");

		WebContentNavigator.gotoEditCP(webContentTitle = "WC WebContent Title");

		Click.clickNoMouseOver(
			key_currentLocale = StringUtil.lowerCase("en-US"),
			locator1 = "Button#TRANSLATIONS_LOCALIZATION");

		AssertTextEquals(
			key_localizedLanguage = "es-ES",
			locator1 = "Translation#TRANSLATION_STATUS_TITLE",
			value1 = "Untranslated");
	}

	@description = "This ensures that The translation in the web content remains after deleting the translation in approved status from the app."
	@priority = "5"
	@refactorneeded
	test DeleteTranslation {
		JSONWebcontent.addWebContent(
			content = "WC WebContent Content",
			description = "Description",
			groupName = "Guest",
			title = "WC WebContent Title");

		WebContentNavigator.openWebContentAdmin(siteURLKey = "guest");

		Translations.gotoTranslate(webContentTitle = "WC WebContent Title");

		Translations.changeTargetLocale(
			currentTargetLocale = "ar-SA",
			newTargetLocale = "es-ES");

		Translations.viewBaseFields(
			webContentContent = "WC WebContent Content",
			webContentTitle = "WC WebContent Title");

		Translations.translateFields(
			webContentContent = "WC WebContent Contenido",
			webContentDescription = "WC WebContent Descripción",
			webContentTitle = "WC WebContent Título");

		PortletEntry.publish();

		Translations.openTranslationAdmin(siteURLKey = "guest");

		Translations.viewTranslationEntry(
			language = "es-ES",
			status = "Approved",
			title = "Translation of WC WebContent Title to es-ES");

		LexiconEntry.delete(
			confirmationText = "Are you sure you want to delete this? It will be deleted immediately.",
			rowEntry = "Translation of WC WebContent Title to es-ES");

		AssertElementNotPresent(
			key_rowEntry = "Translation of WC WebContent Title to es-ES",
			locator1 = "ContentRow#ENTRY_CONTENT_ENTRY_NAME");

		WebContentNavigator.openWebContentAdmin(siteURLKey = "guest");

		WebContentNavigator.gotoEditCP(webContentTitle = "WC WebContent Title");

		PortletEntry.changeLocale(locale = "es-ES");

		WebContent.viewCP(
			webContentContent = "WC WebContent Contenido",
			webContentDescription = "WC WebContent Descripción",
			webContentTitle = "WC WebContent Título");
	}

	@description = "This ensures that the translation can be edited under Translations app."
	@priority = "5"
	@refactorneeded
	test EditTranslation {
		JSONWebcontent.addWebContent(
			content = "WC WebContent Content",
			description = "Description",
			groupName = "Guest",
			title = "WC WebContent Title");

		WebContentNavigator.openWebContentAdmin(siteURLKey = "guest");

		Translations.gotoTranslate(webContentTitle = "WC WebContent Title");

		AssertElementNotPresent(
			key_text = "Auto Translate",
			locator1 = "Button#ANY");

		Translations.changeTargetLocale(
			currentTargetLocale = "ar-SA",
			newTargetLocale = "es-ES");

		Translations.viewBaseFields(
			webContentContent = "WC WebContent Content",
			webContentTitle = "WC WebContent Title");

		Translations.translateFields(
			webContentContent = "WC WebContent Contenido",
			webContentDescription = "WC WebContent Descripción",
			webContentTitle = "WC WebContent Título");

		PortletEntry.publish();

		Translations.openTranslationAdmin(siteURLKey = "guest");

		Translations.viewTranslationEntry(
			language = "es-ES",
			status = "Approved",
			title = "Translation of WC WebContent Title to es-ES");

		LexiconEntry.gotoEntryMenuItem(
			menuItem = "Edit",
			rowEntry = "Translation of WC WebContent Title to es-ES");

		Translations.viewTranslationDetails(
			currentTargetLocale = "es-ES",
			webContentContent = "WC WebContent Contenido",
			webContentDescription = "WC WebContent Descripción",
			webContentTitle = "WC WebContent Título");

		Translations.translateFields(
			webContentContent = "WC WebContent Contenido editar",
			webContentDescription = "WC WebContent Descripción editar",
			webContentTitle = "WC WebContent Título editar");

		PortletEntry.publish();

		LexiconEntry.gotoEntryMenuItem(
			menuItem = "Edit",
			rowEntry = "Translation of WC WebContent Title to es-ES");

		Translations.viewTranslationDetails(
			currentTargetLocale = "es-ES",
			webContentContent = "WC WebContent Contenido editar",
			webContentDescription = "WC WebContent Descripción editar",
			webContentTitle = "WC WebContent Título editar");

		WebContentNavigator.openWebContentAdmin(siteURLKey = "guest");

		WebContentNavigator.gotoEditCP(webContentTitle = "WC WebContent Title");

		PortletEntry.changeLocale(locale = "es-ES");

		WebContent.viewCP(
			webContentContent = "WC WebContent Contenido editar",
			webContentDescription = "WC WebContent Descripción editar",
			webContentTitle = "WC WebContent Título editar");
	}

	@description = "This ensures that the translation can be edited to a new language under Translations app."
	@priority = "5"
	@refactorneeded
	test EditTranslationToNewLanguage {
		JSONWebcontent.addWebContent(
			content = "WC WebContent Content",
			description = "Description",
			groupName = "Guest",
			title = "WC WebContent Title");

		WebContentNavigator.openWebContentAdmin(siteURLKey = "guest");

		Translations.gotoTranslate(webContentTitle = "WC WebContent Title");

		Translations.changeTargetLocale(
			currentTargetLocale = "ar-SA",
			newTargetLocale = "es-ES");

		Translations.viewBaseFields(
			webContentContent = "WC WebContent Content",
			webContentTitle = "WC WebContent Title");

		Translations.translateFields(
			webContentContent = "WC WebContent Contenido",
			webContentDescription = "WC WebContent Descripción",
			webContentTitle = "WC WebContent Título");

		PortletEntry.publish();

		Translations.openTranslationAdmin(siteURLKey = "guest");

		Translations.viewTranslationEntry(
			language = "es-ES",
			status = "Approved",
			title = "Translation of WC WebContent Title to es-ES");

		LexiconEntry.gotoEntryMenuItem(
			menuItem = "Edit",
			rowEntry = "Translation of WC WebContent Title to es-ES");

		Translations.viewTranslationDetails(
			currentTargetLocale = "es-ES",
			webContentContent = "WC WebContent Contenido",
			webContentDescription = "WC WebContent Descripción",
			webContentTitle = "WC WebContent Título");

		Translations.changeTargetLocale(
			currentTargetLocale = "es-ES",
			newTargetLocale = "ja-JP");

		Translations.translateFields(
			webContentContent = "wc webcontentコンテンツ",
			webContentDescription = "wc webcontent記述",
			webContentTitle = "wc webcontentタイトル");

		PortletEntry.publish();

		LexiconEntry.gotoEntryMenuItem(
			menuItem = "Edit",
			rowEntry = "Translation of WC WebContent Title to ja-JP");

		Translations.viewTranslationDetails(
			currentTargetLocale = "ja-JP",
			webContentContent = "wc webcontentコンテンツ",
			webContentDescription = "wc webcontent記述",
			webContentTitle = "wc webcontentタイトル");

		WebContentNavigator.openWebContentAdmin(siteURLKey = "guest");

		WebContentNavigator.gotoEditCP(webContentTitle = "WC WebContent Title");

		PortletEntry.changeLocale(locale = "es-ES");

		WebContent.viewCP(
			webContentContent = "WC WebContent Contenido",
			webContentDescription = "WC WebContent Descripción",
			webContentTitle = "WC WebContent Título");

		PortletEntry.changeLocale(locale = "ja-JP");

		WebContent.viewCP(
			webContentContent = "wc webcontentコンテンツ",
			webContentDescription = "wc webcontent記述",
			webContentTitle = "wc webcontentタイトル");
	}

	@description = "This ensures that translate side by side shows the latest values after editing the web content article."
	@priority = "5"
	@refactorneeded
	test EditWCAfterSideBySideTranslation {
		JSONWebcontent.addWebContent(
			content = "WC WebContent Content",
			groupName = "Guest",
			title = "WC WebContent Title");

		WebContentNavigator.openWebContentAdmin(siteURLKey = "guest");

		Translations.gotoTranslate(webContentTitle = "WC WebContent Title");

		Translations.changeTargetLocale(
			currentTargetLocale = "ar-SA",
			newTargetLocale = "es-ES");

		Translations.viewBaseFields(
			webContentContent = "WC WebContent Content",
			webContentTitle = "WC WebContent Title");

		Translations.translateFields(
			webContentContent = "WC WebContent Contenido",
			webContentDescription = "WC WebContent Descripción",
			webContentTitle = "WC WebContent Título");

		PortletEntry.publish();

		Translations.openTranslationAdmin(siteURLKey = "guest");

		Translations.viewTranslationEntry(
			language = "es-ES",
			status = "Approved",
			title = "Translation of WC WebContent Title to es-ES");

		WebContentNavigator.openWebContentAdmin(siteURLKey = "guest");

		WebContentNavigator.gotoEditCP(webContentTitle = "WC WebContent Title");

		PortletEntry.changeLocale(locale = "es-ES");

		WebContent.addCP(
			webContentContent = "WC WebContent Contenido editar",
			webContentTitle = "WC WebContent Título editar");

		PortletEntry.publish();

		WebContentNavigator.openWebContentAdmin(siteURLKey = "guest");

		Translations.gotoTranslate(webContentTitle = "WC WebContent Title");

		Translations.changeTargetLocale(
			currentTargetLocale = "ar-SA",
			newTargetLocale = "es-ES");

		Translations.viewTargetFields(
			webContentContent = "WC WebContent Contenido editar",
			webContentDescription = "WC WebContent Descripción",
			webContentTitle = "WC WebContent Título editar");
	}

	@description = "This ensures that a translated zip file with all available language can be exported."
	@priority = "5"
	@refactorneeded
	test ExportWCWithAllLanguages {
		JSONWebcontent.addWebContent(
			content = "Web Content Content",
			groupName = "Guest",
			title = "Web Content Title");

		WebContentNavigator.openWebContentAdmin(siteURLKey = "guest");

		Translations.gotoExportTranslation(webContentTitle = "Web Content Title");

		Translations.exportTranslation(
			defaultLanguage = "English (United States)",
			languageList = "Arabic (Saudi Arabia),Catalan (Spain),Chinese (China),Dutch (Netherlands),Finnish (Finland),French (France),German (Germany),Hungarian (Hungary),Japanese (Japan),Portuguese (Brazil),Spanish (Spain),Swedish (Sweden)");

		Translations.assertFileNameFromTempFolder(webContentTitle = "Web Content Title");
	}

	@description = "This ensures that a translated zip file with an available language can be exported."
	@priority = "5"
	@refactorneeded
	test ExportWebContent {
		property portal.acceptance = "true";

		JSONWebcontent.addWebContent(
			content = "Web Content Content",
			groupName = "Guest",
			title = "Web Content Title");

		WebContentNavigator.openWebContentAdmin(siteURLKey = "guest");

		Translations.gotoExportTranslation(webContentTitle = "Web Content Title");

		Translations.exportTranslation(
			defaultLanguage = "English (United States)",
			languageList = "Spanish (Spain)");

		Translations.assertFileNameFromTempFolder(webContentTitle = "Web Content Title");
	}

	@description = "This ensures that user can import the exported xliff file with 1.2 version."
	@priority = "5"
	@refactorneeded
	test ImportExportedXLIFF {
		JSONWebcontent.addWebContent(
			content = "WebContent",
			description = "Description",
			groupName = "Guest",
			title = "WebContentTitle");

		WebContentNavigator.openWebContentAdmin(siteURLKey = "guest");

		Translations.gotoExportTranslation(webContentTitle = "WebContentTitle");

		Translations.exportTranslation(
			defaultLanguage = "English (United States)",
			exportFileFormat = "XLIFF 1.2",
			languageList = "Spanish (Spain)");

		Translations.translateFile(
			contentTranslateion = "Contenidoweb",
			descriptionTranslateion = "Descripcion",
			encoding = "false",
			titleTranslation = "Titulodelcontenidoweb",
			translationFileName = "WebContentTitle-en_US-es_ES",
			translationZipFileName = "WebContentTitle-en_US.zip",
			webContentContent = "WebContent",
			webContentDescription = "Description",
			webContentTitle = "WebContentTitle");

		Translations.importTranslation(
			fileName = "WebContentTitle-en_US-es_ES.xlf",
			webContentTitle = "WebContentTitle");

		WebContentNavigator.gotoEditCP(webContentTitle = "WebContentTitle");

		PortletEntry.changeLocale(locale = "es-ES");

		WebContent.viewCP(
			webContentContent = "Contenidoweb",
			webContentDescription = "Descripcion",
			webContentTitle = "Titulodelcontenidoweb");
	}

	@description = "This ensures that a translated file(.xlf) with an available language can be imported."
	@priority = "5"
	@refactorneeded
	test ImportWebContent {
		property portal.acceptance = "true";

		JSONWebcontent.addWebContent(
			content = "WebContent",
			description = "Description",
			groupName = "Guest",
			title = "WebContentTitle");

		WebContentNavigator.openWebContentAdmin(siteURLKey = "guest");

		Translations.gotoExportTranslation(webContentTitle = "WebContentTitle");

		Translations.exportTranslation(
			defaultLanguage = "English (United States)",
			languageList = "Spanish (Spain)");

		Translations.translateFile(
			contentTranslateion = "Contenidoweb",
			descriptionTranslateion = "Descripcion",
			encoding = "false",
			titleTranslation = "Titulodelcontenidoweb",
			translationFileName = "WebContentTitle-en_US-es_ES",
			translationZipFileName = "WebContentTitle-en_US.zip",
			webContentContent = "WebContent",
			webContentDescription = "Description",
			webContentTitle = "WebContentTitle");

		Translations.importTranslation(
			fileName = "WebContentTitle-en_US-es_ES.xlf",
			webContentTitle = "WebContentTitle");

		WebContentNavigator.gotoEditCP(webContentTitle = "WebContentTitle");

		PortletEntry.changeLocale(locale = "es-ES");

		WebContent.viewCP(
			webContentContent = "Contenidoweb",
			webContentDescription = "Descripcion",
			webContentTitle = "Titulodelcontenidoweb");
	}

	@description = "This ensures that a translated file(.xlf) after re-encoding it to UTF-8 can be imported."
	@priority = "4"
	@refactorneeded
	test ImportWebContentWithUTF8 {
		JSONWebcontent.addWebContent(
			content = "WebContent",
			description = "Description",
			groupName = "Guest",
			title = "WebContentTitle");

		WebContentNavigator.openWebContentAdmin(siteURLKey = "guest");

		Translations.gotoExportTranslation(webContentTitle = "WebContentTitle");

		Translations.exportTranslation(
			defaultLanguage = "English (United States)",
			languageList = "Japanese (Japan)");

		Translations.translateFile(
			contentTranslateion = "Webコンテンツ",
			descriptionTranslateion = "説明",
			encoding = "utf8",
			titleTranslation = "Webコンテンツのタイトル",
			translationFileName = "WebContentTitle-en_US-ja_JP",
			translationZipFileName = "WebContentTitle-en_US.zip",
			webContentContent = "WebContent",
			webContentDescription = "Description",
			webContentTitle = "WebContentTitle");

		Translations.importTranslation(
			fileName = "WebContentTitle-en_US-ja_JP_utf8.xlf",
			webContentTitle = "WebContentTitle");

		WebContentNavigator.gotoEditCP(webContentTitle = "WebContentTitle");

		PortletEntry.changeLocale(locale = "ja-JP");

		WebContent.viewCP(
			webContentContent = "Webコンテンツ",
			webContentDescription = "説明",
			webContentTitle = "Webコンテンツのタイトル");
	}

	@description = "This ensures that a translated file(.xliff) with an available language can be imported."
	@priority = "5"
	@refactorneeded
	test ImportWebContentWithXliffFile {
		property portal.acceptance = "true";

		JSONWebcontent.addWebContent(
			content = "WebContent",
			description = "Description",
			groupName = "Guest",
			title = "WebContentTitle");

		WebContentNavigator.openWebContentAdmin(siteURLKey = "guest");

		Translations.gotoExportTranslation(webContentTitle = "WebContentTitle");

		Translations.exportTranslation(
			defaultLanguage = "English (United States)",
			languageList = "German (Germany)");

		Translations.translateFile(
			contentTranslateion = "Internetinhalt",
			descriptionTranslateion = "Beschreibung",
			encoding = "false",
			titleTranslation = "TiteldesWebinhalts",
			translationFileName = "WebContentTitle-en_US-de_DE",
			translationFileRename = "true",
			translationZipFileName = "WebContentTitle-en_US.zip",
			webContentContent = "WebContent",
			webContentDescription = "Description",
			webContentTitle = "WebContentTitle");

		Translations.importTranslation(
			fileName = "WebContentTitle-en_US-de_DE.xliff",
			webContentTitle = "WebContentTitle");

		WebContentNavigator.gotoEditCP(webContentTitle = "WebContentTitle");

		PortletEntry.changeLocale(locale = "de-DE");

		WebContent.viewCP(
			webContentContent = "Internetinhalt",
			webContentDescription = "Beschreibung",
			webContentTitle = "TiteldesWebinhalts");
	}

	@description = "This ensures that the translator can select which target language she wants to translate."
	@priority = "5"
	@refactorneeded
	test TranslateCustomizedWC {
		WebContentNavigator.openWebContentAdmin(siteURLKey = "guest");

		NavItem.gotoStructures();

		WebContentStructures.addCP(
			structureDescription = "WC Structure Description",
			structureName = "WC Structure Name");

		DataEngine.addFields(fieldNameList = "Numeric,Rich Text,Text");

		DataEngine.addField(
			fieldFieldLabel = "Text Box",
			fieldName = "Text",
			fieldType = "Multiple Lines");

		DataEngine.addField(
			fieldFieldLabel = "Decimal",
			fieldName = "Numeric",
			numericType = "Decimal");

		WebContentStructures.saveCP(structureName = "WC Structure Name");

		WebContentNavigator.openWebContentAdmin(siteURLKey = "guest");

		NavItem.gotoTemplates();

		WebContentTemplates.addCP(
			structureName = "WC Structure Name",
			templateDescription = "WC Template Description",
			templateName = "WC Template Name");

		WebContentNavigator.openWebContentAdmin(siteURLKey = "guest");

		WebContentNavigator.gotoAddWithStructureCP(structureName = "WC Structure Name");

		WebContent.addWithStructureCP(
			numericType = "Decimal",
			webContentNumeric = "0.5",
			webContentNumericFieldLabel = "Decimal");

		WebContent.addWithStructureCP(
			fieldType = "Multiple Lines",
			webContentText = "This is a Text Box field",
			webContentTextFieldLabel = "Text Box");

		var webContentSourceHTML = '''<h2 class="text-center">This is a HTML title</h2>''';

		WebContent.addWithStructureCP(
			description = "WC WebContent Description",
			source = "true",
			structureName = "WC Structure Name",
			templateName = "WC Template Name",
			webContentNumeric = "100",
			webContentRichText = "${webContentSourceHTML}",
			webContentText = "Text",
			webContentTitle = "WC WebContent Title");

		PortletEntry.publish();

		Translations.gotoTranslate(webContentTitle = "WC WebContent Title");

		Translations.changeTargetLocale(
			currentTargetLocale = "ar-SA",
			newTargetLocale = "es-ES");

		Translations.viewBaseFields(
			fieldType = "Multiple Lines",
			webContentText = "This is a Text Box field",
			webContentTextFieldLabel = "Text Box");

		Translations.viewBaseFields(
			numericType = "Decimal",
			webContentNumeric = "0.5",
			webContentNumericFieldLabel = "Decimal");

		var webContentHTML = "This is a HTML title";

		Translations.viewBaseFields(
			webContentDescription = "WC WebContent Description",
			webContentNumeric = "100",
			webContentRichText = "${webContentHTML}",
			webContentText = "Text",
			webContentTitle = "WC WebContent Title");

		var webContentSourceHTML = '''<h2 class="text-center">Este es un título HTML</h2>''';

		Translations.translateFields(
			webContentDecimal = "2.2",
			webContentDescription = "WC WebContent Descripción",
			webContentNumber = "200",
			webContentSourceHTML = "${webContentSourceHTML}",
			webContentText = "Mensaje de texto",
			webContentTextBox = "Este es un cuadro de texto.",
			webContentTitle = "WC WebContent Título");

		PortletEntry.publish();

		Translations.gotoTranslate(webContentTitle = "WC WebContent Title");

		Translations.changeTargetLocale(
			currentTargetLocale = "ar-SA",
			newTargetLocale = "es-ES");

		var webContentHTML = "Este es un título HTML";

		Translations.viewTargetFields(
			webContentDecimal = "2,2",
			webContentDescription = "WC WebContent Descripción",
			webContentHTML = "${webContentHTML}",
			webContentNumber = "200",
			webContentText = "Mensaje de texto",
			webContentTextBox = "Este es un cuadro de texto.",
			webContentTitle = "WC WebContent Título");

		Translations.openTranslationAdmin(siteURLKey = "guest");

		Translations.viewTranslationEntry(
			language = "es-ES",
			status = "Approved",
			title = "Translation of WC WebContent Title to es-ES");

		var portalURL = PropsUtil.get("portal.url");

		WebContentNavigator.openWebContentAdmin(siteURLKey = "guest");

		WebContent.viewWithStructureCP(
			description = "WC WebContent Descripción",
			webContentLocaleFieldLabel = "es-ES",
			webContentNumeric = "200",
			webContentRichText = "Este es un título HTML",
			webContentText = "Mensaje de texto",
			webContentTitle = "WC WebContent Title",
			webContentTitleTranslated = "WC WebContent Título");

		WebContent.viewWithStructureCP(
			predefinedValue = "true",
			webContentNumeric = "2,2",
			webContentNumericFieldLabel = "Decimal");

		WebContent.viewWithStructureCP(
			fieldType = "Multiple Lines",
			predefinedValue = "true",
			webContentText = "Este es un cuadro de texto.",
			webContentTextFieldLabel = "Text Box");
	}

	@description = "This test covers LPS-127980. This ensures that the newly added field can be translated after updating the WC structure."
	@priority = "4"
	@refactorneeded
	test TranslateWCAfterEditingStructure {
		WebContentNavigator.openWebContentAdmin(siteURLKey = "guest");

		NavItem.gotoStructures();

		WebContentStructures.addCP(
			structureDescription = "WC Structure Description",
			structureName = "WC Structure Name");

		DataEngine.addField(
			fieldFieldLabel = "Text",
			fieldName = "Text");

		WebContentStructures.saveCP(structureName = "WC Structure Name");

		WebContentNavigator.openWebContentAdmin(siteURLKey = "guest");

		NavItem.gotoTemplates();

		WebContentTemplates.addCP(
			structureName = "WC Structure Name",
			templateDescription = "WC Template Description",
			templateName = "WC Template Name");

		WebContentNavigator.openWebContentAdmin(siteURLKey = "guest");

		WebContentNavigator.gotoAddWithStructureCP(structureName = "WC Structure Name");

		WebContent.addWithStructureCP(
			structureName = "WC Structure Name",
			templateName = "WC Template Name",
			webContentText = "WC WebContent Text",
			webContentTitle = "WC WebContent Title");

		PortletEntry.publish();

		Translations.gotoTranslate(webContentTitle = "WC WebContent Title");

		Translations.changeTargetLocale(
			currentTargetLocale = "ar-SA",
			newTargetLocale = "es-ES");

		Translations.viewBaseFields(
			webContentText = "Text",
			webContentTitle = "WC WebContent Title");

		Translations.translateFields(
			webContentText = "Mensaje de texto",
			webContentTitle = "WC WebContent Título");

		PortletEntry.publish();

		NavItem.gotoStructures();

		WebContentNavigator.gotoEditStructure(structureName = "WC Structure Name");

		DataEngine.addField(
			fieldFieldLabel = "Numeric",
			fieldName = "Numeric");

		WebContentStructures.saveCP(structureName = "WC Structure Name");

		WebContentNavigator.openWebContentAdmin(siteURLKey = "guest");

		Translations.gotoTranslate(webContentTitle = "WC WebContent Title");

		Translations.changeTargetLocale(
			currentTargetLocale = "ar-SA",
			newTargetLocale = "es-ES");

		Translations.viewBaseFields(
			webContentNumeric = "",
			webContentNumericFieldLabel = "Numeric");

		Translations.translateFields(webContentNumber = "200");

		PortletEntry.publish();

		Translations.openTranslationAdmin(siteURLKey = "guest");

		LexiconEntry.gotoEntryMenuItem(
			menuItem = "Edit",
			rowEntry = "Translation of WC WebContent Title to es-ES");

		Translations.viewTranslationDetails(
			currentTargetLocale = "es-ES",
			webContentNumber = "200",
			webContentText = "Mensaje de texto",
			webContentTitle = "WC WebContent Título");
	}

	@description = "This ensures that the user can not translate a web content to an unavailable language."
	@priority = "4"
	@refactorneeded
	test TranslateWCToUnavailableLanguage {
		property custom.properties = "jsonws.web.service.paths.excludes=";

		JSONWebcontent.addWebContent(
			content = "WC WebContent Content",
			groupName = "Guest",
			title = "WC WebContent Title");

		Permissions.setUpRegRoleLoginUserCP(
			roleTitle = "Regrole Name",
			userEmailAddress = "userea@liferay.com",
			userFirstName = "userfn",
			userLastName = "userln",
			userScreenName = "usersn");

		Permissions.definePermissionViaJSONAPI(
			resourceAction = "VIEW_SITE_ADMINISTRATION",
			resourceName = "com.liferay.portal.kernel.model.Group",
			roleTitle = "Regrole Name");

		Permissions.definePermissionViaJSONAPI(
			resourceAction = "ACCESS_IN_CONTROL_PANEL",
			resourceName = "com_liferay_journal_web_portlet_JournalPortlet",
			roleTitle = "Regrole Name");

		for (var resourceNameIndex : list "com_liferay_journal_web_portlet_JournalPortlet,com.liferay.journal,com.liferay.journal.model.JournalArticle") {
			Permissions.definePermissionViaJSONAPI(
				resourceAction = "VIEW",
				resourceName = "${resourceNameIndex}",
				roleTitle = "Regrole Name");
		}

		for (var resourceActionIndex : list "ACCESS_IN_CONTROL_PANEL,VIEW") {
			Permissions.definePermissionViaJSONAPI(
				resourceAction = "${resourceActionIndex}",
				resourceName = "com_liferay_translation_web_internal_portlet_TranslationPortlet",
				roleTitle = "Regrole Name");
		}

		for (var resourceNameIndex : list "com.liferay.translation.zh_CN") {
			Permissions.definePermissionViaJSONAPI(
				resourceAction = "TRANSLATE",
				resourceName = "${resourceNameIndex}",
				roleTitle = "Regrole Name");
		}

		Site.openSiteSettingsAdmin(siteURLKey = "guest");

		Site.configureCurrentLanguagesCP(
			currentSiteLanguages = "English (United States),Spanish (Spain),Arabic (Saudi Arabia),Catalan (Spain),Dutch (Netherlands),Finnish (Finland),French (France),German (Germany),Hungarian (Hungary),Japanese (Japan),Portuguese (Brazil),Swedish (Sweden)",
			defaultSiteLanguage = "English (United States)");

		User.logoutAndLoginPG(
			userLoginEmailAddress = "userea@liferay.com",
			userLoginFullName = "userfn userln");

		WebContentNavigator.openWebContentAdmin(siteURLKey = "guest");

		Translations.gotoTranslate(webContentTitle = "WC WebContent Title");

		Alert.viewInfoMessageSpecific(infoMessage = "You do not have permissions to translate to any of the available languages.");
	}

	@description = "This ensures that the user can not translate a web content without any languages permissions."
	@priority = "4"
	@refactorneeded
	test TranslateWCWithoutLanguagesPermissions {
		property custom.properties = "jsonws.web.service.paths.excludes=";

		JSONWebcontent.addWebContent(
			content = "WC WebContent Content",
			groupName = "Guest",
			title = "WC WebContent Title");

		JSONUser.addUser(
			userEmailAddress = "userea@liferay.com",
			userFirstName = "userfn",
			userLastName = "userln",
			userScreenName = "usersn");

		JSONUser.setFirstPassword(
			agreeToTermsAndAnswerReminderQuery = "true",
			requireReset = "false",
			userEmailAddress = "userea@liferay.com");

		JSONRole.addRegularRole(roleTitle = "Regrole Name");

		JSONRole.assignRoleToUser(
			roleTitle = "Regrole Name",
			userEmailAddress = "userea@liferay.com");

		for (var resourceActionIndex : list "ACCESS_IN_CONTROL_PANEL,VIEW") {
			Permissions.definePermissionViaJSONAPI(
				resourceAction = "${resourceActionIndex}",
				resourceName = "com_liferay_translation_web_internal_portlet_TranslationPortlet",
				roleTitle = "Regrole Name");
		}

		Permissions.definePermissionViaJSONAPI(
			resourceAction = "VIEW_SITE_ADMINISTRATION",
			resourceName = "com.liferay.portal.kernel.model.Group",
			roleTitle = "Regrole Name");

		Permissions.definePermissionViaJSONAPI(
			resourceAction = "ACCESS_IN_CONTROL_PANEL",
			resourceName = "com_liferay_journal_web_portlet_JournalPortlet",
			roleTitle = "Regrole Name");

		for (var resourceNameIndex : list "com_liferay_journal_web_portlet_JournalPortlet,com.liferay.journal,com.liferay.journal.model.JournalArticle") {
			Permissions.definePermissionViaJSONAPI(
				resourceAction = "VIEW",
				resourceName = "${resourceNameIndex}",
				roleTitle = "Regrole Name");
		}

		User.logoutAndLoginPG(
			userLoginEmailAddress = "userea@liferay.com",
			userLoginFullName = "userfn userln");

		WebContentNavigator.openWebContentAdmin(siteURLKey = "guest");

		Translations.gotoTranslate(webContentTitle = "WC WebContent Title");

		Alert.viewInfoMessageSpecific(infoMessage = "You do not have permissions to translate to any of the available languages.");
	}

	@description = "This ensures that the user can translate a Web content to the language she has permissions."
	@priority = "5"
	@refactorneeded
	test TranslateWCWithSpecificLanguagesPermissions {
		property custom.properties = "jsonws.web.service.paths.excludes=";

		JSONWebcontent.addWebContent(
			content = "WC WebContent Content",
			groupName = "Guest",
			title = "WC WebContent Title");

		Permissions.setUpRegRoleLoginUserCP(
			roleTitle = "Regrole Name",
			userEmailAddress = "userea@liferay.com",
			userFirstName = "userfn",
			userLastName = "userln",
			userScreenName = "usersn");

		Permissions.definePermissionViaJSONAPI(
			resourceAction = "VIEW_SITE_ADMINISTRATION",
			resourceName = "com.liferay.portal.kernel.model.Group",
			roleTitle = "Regrole Name");

		Permissions.definePermissionViaJSONAPI(
			resourceAction = "ACCESS_IN_CONTROL_PANEL",
			resourceName = "com_liferay_journal_web_portlet_JournalPortlet",
			roleTitle = "Regrole Name");

		for (var resourceNameIndex : list "com_liferay_journal_web_portlet_JournalPortlet,com.liferay.journal,com.liferay.journal.model.JournalArticle") {
			Permissions.definePermissionViaJSONAPI(
				resourceAction = "VIEW",
				resourceName = "${resourceNameIndex}",
				roleTitle = "Regrole Name");
		}

		for (var resourceActionIndex : list "ACCESS_IN_CONTROL_PANEL,VIEW") {
			Permissions.definePermissionViaJSONAPI(
				resourceAction = "${resourceActionIndex}",
				resourceName = "com_liferay_translation_web_internal_portlet_TranslationPortlet",
				roleTitle = "Regrole Name");
		}

		for (var resourceNameIndex : list "com.liferay.translation.es_ES,com.liferay.translation.zh_CN") {
			Permissions.definePermissionViaJSONAPI(
				resourceAction = "TRANSLATE",
				resourceName = "${resourceNameIndex}",
				roleTitle = "Regrole Name");
		}

		User.logoutAndLoginPG(
			userLoginEmailAddress = "userea@liferay.com",
			userLoginFullName = "userfn userln");

		WebContentNavigator.openWebContentAdmin(siteURLKey = "guest");

		Translations.gotoTranslate(webContentTitle = "WC WebContent Title");

		Translations.viewTargetLocales(
			currentTargetLocale = "zh-CN",
			noTargetLocale = "ar-SA,ca-ES,nl-NL,fi-FI,fr-FR,de-DE,hu-HU,ja-JP,pt-BR,sv-SE",
			targetLocale = "es-ES,zh-CN");

		WebContentNavigator.openWebContentAdmin(siteURLKey = "guest");

		Translations.gotoTranslate(webContentTitle = "WC WebContent Title");

		Translations.changeTargetLocale(
			currentTargetLocale = "zh-CN",
			newTargetLocale = "es-ES");

		Translations.viewBaseFields(
			webContentContent = "WC WebContent Content",
			webContentTitle = "WC WebContent Title");

		Translations.translateFields(
			webContentContent = "WC WebContent Contenido",
			webContentDescription = "WC WebContent Descripción",
			webContentTitle = "WC WebContent Título");

		PortletEntry.publish();

		Translations.gotoTranslate(webContentTitle = "WC WebContent Title");

		Translations.changeTargetLocale(
			currentTargetLocale = "zh-CN",
			newTargetLocale = "es-ES");

		Translations.viewTargetFields(
			webContentContent = "WC WebContent Contenido",
			webContentDescription = "WC WebContent Descripción",
			webContentTitle = "WC WebContent Título");

		Translations.openTranslationAdmin(siteURLKey = "guest");

		Translations.viewTranslationEntry(
			language = "es-ES",
			status = "Approved",
			title = "Translation of WC WebContent Title to es-ES");
	}

	@description = "This ensures that the translator can select which base language she wants to translate."
	@priority = "5"
	@refactorneeded
	test TranslateWebContent {
		property portal.acceptance = "true";

		JSONWebcontent.addWebContent(
			content = "WC WebContent Content",
			groupName = "Guest",
			title = "WC WebContent Title");

		WebContentNavigator.openWebContentAdmin(siteURLKey = "guest");

		Translations.gotoTranslate(webContentTitle = "WC WebContent Title");

		Translations.changeTargetLocale(
			currentTargetLocale = "ar-SA",
			newTargetLocale = "es-ES");

		Translations.viewBaseFields(
			webContentContent = "WC WebContent Content",
			webContentTitle = "WC WebContent Title");

		Translations.translateFields(
			webContentContent = "WC WebContent Contenido",
			webContentDescription = "WC WebContent Descripción",
			webContentTitle = "WC WebContent Título");

		PortletEntry.publish();

		Translations.gotoTranslate(webContentTitle = "WC WebContent Title");

		Translations.changeBaseLocale(
			currentBaseLocale = "en-US",
			newBaseLocale = "es-ES");

		Translations.changeTargetLocale(
			currentTargetLocale = "ar-SA",
			newTargetLocale = "ja-JP");

		Translations.viewBaseFields(
			webContentContent = "WC WebContent Contenido",
			webContentDescription = "WC WebContent Descripción",
			webContentTitle = "WC WebContent Título");

		Translations.translateFields(
			webContentContent = "wc webcontentコンテンツ",
			webContentDescription = "wc webcontent記述",
			webContentTitle = "wc webcontentタイトル");

		PortletEntry.publish();

		Translations.gotoTranslate(webContentTitle = "WC WebContent Title");

		Translations.changeTargetLocale(
			currentTargetLocale = "ar-SA",
			newTargetLocale = "es-ES");

		Translations.viewTargetFields(
			webContentContent = "WC WebContent Contenido",
			webContentDescription = "WC WebContent Descripción",
			webContentTitle = "WC WebContent Título");

		Translations.changeTargetLocale(
			currentTargetLocale = "es-ES",
			newTargetLocale = "ja-JP");

		Translations.viewTargetFields(
			webContentContent = "wc webcontentコンテンツ",
			webContentDescription = "wc webcontent記述",
			webContentTitle = "wc webcontentタイトル");

		WebContentNavigator.openWebContentAdmin(siteURLKey = "guest");

		WebContentNavigator.gotoEditCP(webContentTitle = "WC WebContent Title");

		PortletEntry.changeLocale(locale = "es-ES");

		WebContent.viewCP(
			webContentContent = "WC WebContent Contenido",
			webContentDescription = "WC WebContent Descripción",
			webContentTitle = "WC WebContent Título");

		PortletEntry.changeLocale(locale = "ja-JP");

		WebContent.viewCP(
			webContentContent = "wc webcontentコンテンツ",
			webContentDescription = "wc webcontent記述",
			webContentTitle = "wc webcontentタイトル");

		ProductMenu.gotoPortlet(
			category = "Content &amp; Data",
			portlet = "Translation Processes");

		Translations.viewTranslationEntry(
			language = "es-ES",
			status = "Approved",
			title = "Translation of WC WebContent Title to es-ES");

		Translations.viewTranslationEntry(
			language = "ja-JP",
			status = "Approved",
			title = "Translation of WC WebContent Title to ja-JP");
	}

	@description = "This ensures that the modification date of a translation can be displayed correctly after editing."
	@priority = "3"
	@refactorneeded
	test ViewEntryModifiedDate {
		JSONWebcontent.addWebContent(
			content = "WC WebContent Content",
			groupName = "Guest",
			title = "WC WebContent Title");

		WebContentNavigator.openWebContentAdmin(siteURLKey = "guest");

		Translations.gotoTranslate(webContentTitle = "WC WebContent Title");

		Translations.changeTargetLocale(
			currentTargetLocale = "ar-SA",
			newTargetLocale = "es-ES");

		Translations.translateFields(
			webContentContent = "WC WebContent Contenido",
			webContentDescription = "WC WebContent Descriptionscripción",
			webContentTitle = "WC WebContent Título");

		Button.clickPublish();

		ProductMenu.gotoPortlet(
			category = "Content &amp; Data",
			portlet = "Translation Processes");

		Translations.viewTranslationEntry(
			language = "es-ES",
			modifiedDate = "Seconds Ago",
			status = "Approved",
			title = "Translation of WC WebContent Title to es-ES");

		Pause(locator1 = "60000");

		Refresh();

		Translations.viewTranslationEntry(
			language = "es-ES",
			modifiedDate = "Minute Ago",
			status = "Approved",
			title = "Translation of WC WebContent Title to es-ES");

		WebContentNavigator.openWebContentAdmin(siteURLKey = "guest");

		Translations.gotoTranslate(webContentTitle = "WC WebContent Title");

		Translations.changeTargetLocale(
			currentTargetLocale = "ar-SA",
			newTargetLocale = "es-ES");

		Translations.translateFields(webContentTitle = "WC WebContent Título editar");

		Button.clickPublish();

		ProductMenu.gotoPortlet(
			category = "Content &amp; Data",
			portlet = "Translation Processes");

		Translations.viewTranslationEntry(
			language = "es-ES",
			modifiedDate = "Seconds Ago",
			status = "Approved",
			title = "Translation of WC WebContent Title to es-ES");
	}

	@description = "This ensures that the user can see translation options after move all available languages to current."
	@priority = "4"
	@refactorneeded
	test ViewOptionsWithAllLanguages {
		WebContentNavigator.openWebContentAdmin(siteURLKey = "guest");

		NavItem.gotoStructures();

		WebContentStructures.addCP(
			structureDescription = "WC Structure Description",
			structureName = "WC Structure Name");

		DataEngine.addField(
			fieldFieldLabel = "Text",
			fieldName = "Text");

		WebContentStructures.saveCP(structureName = "WC Structure Name");

		WebContentNavigator.openWebContentAdmin(siteURLKey = "guest");

		NavItem.gotoTemplates();

		WebContentTemplates.addCP(
			structureName = "WC Structure Name",
			templateFieldNames = "Text",
			templateName = "WC Template Name");

		WebContentNavigator.openWebContentAdmin(siteURLKey = "guest");

		WebContentNavigator.gotoAddWithStructureCP(structureName = "WC Structure Name");

		WebContent.addWithStructureCP(
			structureName = "WC Structure Name",
			templateName = "WC Template Name",
			webContentText = "Text",
			webContentTitle = "Web Content Title");

		PortletEntry.publish();

		Site.openSiteSettingsAdmin(siteURLKey = "guest");

		Site.configureCurrentLanguagesCP(
			currentSiteLanguages = "Spanish (Spain)",
			defaultSiteLanguage = "Spanish (Spain)");

		WebContentNavigator.openWebContentAdmin(siteURLKey = "guest");

		Translations.viewTranslationOptions(
			noOptions = "true",
			webContentTitle = "Web Content Title");

		Site.openSiteSettingsAdmin(siteURLKey = "guest");

		Site.configureCurrentLanguagesCP(
			currentSiteLanguages = "English (United States),Spanish (Spain),Arabic (Saudi Arabia),Catalan (Spain),Chinese (China),Dutch (Netherlands),Finnish (Finland),French (France),German (Germany),Hungarian (Hungary),Japanese (Japan),Portuguese (Brazil),Swedish (Sweden)",
			defaultSiteLanguage = "Spanish (Spain)");

		WebContentNavigator.openWebContentAdmin(siteURLKey = "guest");

		Translations.viewTranslationOptions(webContentTitle = "Web Content Title");
	}

	@description = "This ensures that the user can see translation options after move one more available language to current."
	@priority = "5"
	@refactorneeded
	test ViewOptionsWithOneMoreLanguage {
		JSONWebcontent.addWebContent(
			content = "Web Content Content",
			groupName = "Guest",
			title = "Web Content Title");

		Site.openSiteSettingsAdmin(siteURLKey = "guest");

		Site.configureCurrentLanguagesCP(
			currentSiteLanguages = "English (United States)",
			defaultSiteLanguage = "English (United States)");

		WebContentNavigator.openWebContentAdmin(siteURLKey = "guest");

		Translations.viewTranslationOptions(
			noOptions = "true",
			webContentTitle = "Web Content Title");

		Site.openSiteSettingsAdmin(siteURLKey = "guest");

		Site.configureCurrentLanguagesCP(
			currentSiteLanguages = "English (United States),Spanish (Spain)",
			defaultSiteLanguage = "English (United States)");

		WebContentNavigator.openWebContentAdmin(siteURLKey = "guest");

		Translations.viewTranslationOptions(webContentTitle = "Web Content Title");
	}

	@description = "This test covers LPS-125966. This ensures that a warning message shows when viewing a translation that its web content has been deleted."
	@priority = "4"
	@refactorneeded
	test ViewTranslateAfterWebContentDeleted {
		JSONWebcontent.addWebContent(
			content = "WC WebContent Content",
			groupName = "Guest",
			title = "WC WebContent Title");

		WebContentNavigator.openWebContentAdmin(siteURLKey = "guest");

		Translations.gotoTranslate(webContentTitle = "WC WebContent Title");

		Translations.changeTargetLocale(
			currentTargetLocale = "ar-SA",
			newTargetLocale = "es-ES");

		Translations.viewBaseFields(
			webContentContent = "WC WebContent Content",
			webContentTitle = "WC WebContent Title");

		Translations.translateFields(
			webContentContent = "WC WebContent Contenido",
			webContentDescription = "WC WebContent Descripción",
			webContentTitle = "WC WebContent Título");

		PortletEntry.publish();

		Translations.openTranslationAdmin(siteURLKey = "guest");

		Translations.viewTranslationEntry(
			language = "es-ES",
			status = "Approved",
			title = "Translation of WC WebContent Title to es-ES");

		WebContentNavigator.openWebContentAdmin(siteURLKey = "guest");

		WebContent.moveToRecycleBinCP(
			assetType = "Web Content Article",
			webContentTitle = "WC WebContent Title");

		Translations.openTranslationAdmin(siteURLKey = "guest");

		AssertConsoleTextNotPresent(value1 = "com.liferay.journal.exception.NoSuchArticleException");

		Translations.viewTranslationEntry(
			language = "es-ES",
			status = "Approved",
			title = "Translation");

		AssertClick(
			key_rowEntry = "Translation",
			locator1 = "ContentRow#ENTRY_CONTENT_ENTRY_NAME_LINK",
			value1 = "Translation");

		AssertTextEquals(
			locator1 = "Message#INFO",
			value1 = "Info:You do not have permissions to translate to any of the available languages.");

		RecycleBin.openRecycleBinAdmin(siteURLKey = "guest");

		RecycleBin.deleteCP(
			assetName = "WC WebContent Title",
			assetType = "Web Content Article");

		AssertElementNotPresent(
			key_rowEntry = "Translation",
			locator1 = "ContentRow#ENTRY_CONTENT_ENTRY_NAME");

		AssertElementNotPresent(
			key_rowEntry = "Translation of WC WebContent Title to es-ES",
			locator1 = "ContentRow#ENTRY_CONTENT_ENTRY_NAME");
	}

	@description = "This test covers LPS-128546. It ensures that the translated field content can be displayed correctly after editing by different translation ways."
	@priority = "4"
	@refactorneeded
	test ViewTranslatedFieldContentAfterEditing {
		WebContentNavigator.openWebContentAdmin(siteURLKey = "guest");

		NavItem.gotoStructures();

		WebContentStructures.addCP(
			structureDescription = "WC Structure Description",
			structureName = "WC Structure Name");

		DataEngine.addFields(fieldNameList = "Rich Text,Text");

		WebContentStructures.saveCP(structureName = "WC Structure Name");

		WebContentNavigator.openWebContentAdmin(siteURLKey = "guest");

		WebContentNavigator.gotoAddWithStructureCP(structureName = "WC Structure Name");

		WebContent.addWithStructureCP(
			description = "WC WebContent Description EN",
			structureName = "WC Structure Name",
			webContentRichText = "Rich Text EN",
			webContentText = "Text EN",
			webContentTitle = "WC WebContent Title EN");

		PortletEntry.publish();

		WebContentNavigator.openWebContentAdmin(siteURLKey = "guest");

		WebContent.editWithStructureCP(
			locale = "pt-BR",
			webContentRichText = "Rich Text PT",
			webContentText = "Text PT",
			webContentTitle = "WC WebContent Title EN",
			webContentTitleEdit = "WC WebContent Title PT");

		WebContentNavigator.openWebContentAdmin(siteURLKey = "guest");

		Translations.gotoTranslate(webContentTitle = "WC WebContent Title EN");

		Translations.changeTargetLocale(
			currentTargetLocale = "ar-SA",
			newTargetLocale = "pt-BR");

		Translations.viewTargetFields(
			webContentHTML = "Rich Text PT",
			webContentText = "Text PT",
			webContentTitle = "WC WebContent Title PT");

		Translations.translateFields(
			webContentSourceHTML = "Rich Text PT Edit",
			webContentText = "Text PT Edit",
			webContentTitle = "WC WebContent Title PT Edit");

		PortletEntry.publish();

		WebContentNavigator.openWebContentAdmin(siteURLKey = "guest");

		WebContent.viewWithStructureCP(
			webContentLocaleFieldLabel = "pt-BR",
			webContentRichText = "Rich Text PT Edit",
			webContentText = "Text PT Edit",
			webContentTitle = "WC WebContent Title EN",
			webContentTitleTranslated = "WC WebContent Title PT Edit");

		WebContentNavigator.openWebContentAdmin(siteURLKey = "guest");

		WebContent.editWithStructureCP(
			locale = "pt-BR",
			webContentRichText = "Rich Text PT Edit Again",
			webContentText = "Text PT Again",
			webContentTitle = "WC WebContent Title EN",
			webContentTitleEdit = "WC WebContent Title PT Again");

		WebContentNavigator.openWebContentAdmin(siteURLKey = "guest");

		Translations.gotoTranslate(webContentTitle = "WC WebContent Title EN");

		Translations.changeTargetLocale(
			currentTargetLocale = "ar-SA",
			newTargetLocale = "pt-BR");

		Translations.viewTargetFields(
			webContentHTML = "Rich Text PT Edit Again",
			webContentText = "Text PT Again",
			webContentTitle = "WC WebContent Title PT Again");
	}

}