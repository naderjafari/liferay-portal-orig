@component-name = "portal-web-forms-and-data-lists"
definition {

	property custom.properties = "minifier.enabled=true";
	property portal.release = "true";
	property portal.upstream = "true";
	property testray.main.component.name = "Forms";

	setUp {
		TestCase.setUpPortalInstance();

		User.firstLoginPG();
	}

	tearDown {
		var testPortalInstance = PropsUtil.get("test.portal.instance");

		if ("${testPortalInstance}" == "true") {
			PortalInstances.tearDownCP();
		}
		else {
			Navigator.openURL();

			ProductMenu.gotoPortlet(
				category = "Content &amp; Data",
				portlet = "Forms");

			FormsAdmin.teardownForms();

			Page.tearDownCP();
		}
	}

	@description = "Verify that a Color Field can be created"
	@priority = "5"
	test CanBeCreated {
		property forms.functional = "true";
		property portal.acceptance = "false";

		ProductMenu.gotoPortlet(
			category = "Content &amp; Data",
			portlet = "Forms");

		FormsAdminNavigator.gotoAddForm();

		Form.editName(formName = "Form 1");

		Form.gotoAddField(
			fieldPositionNumber = "0",
			fieldType = "Color");

		Form.save();

		FormsAdminNavigator.gotoBack();

		FormsAdminNavigator.gotoEditFormByName(formName = "Form 1");

		AssertElementPresent(
			key_name = "Color",
			locator1 = "FormFields#FIELD_TARGET_LABEL");
	}

	@description = "Verify that a Color Field can be deleted"
	@priority = "5"
	test CanBeDeleted {
		property forms.functional = "true";
		property portal.acceptance = "false";

		ProductMenu.gotoPortlet(
			category = "Content &amp; Data",
			portlet = "Forms");

		FormsAdminNavigator.gotoAddForm();

		Form.editName(formName = "Form 1");

		Form.gotoAddField(
			fieldPositionNumber = "0",
			fieldType = "Color");

		Form.closeSidebar();

		Form.gotoAddField(
			fieldPositionNumber = "1",
			fieldType = "Numeric");

		Form.closeSidebar();

		FormsAdminNavigator.gotoDeleteField(fieldName = "Color");

		FormFields.viewDeletedFieldLabel(fieldName = "Color");

		Form.save();

		FormsAdminNavigator.gotoBack();

		FormsAdminNavigator.gotoEditFormByName(formName = "Form 1");

		FormFields.viewDeletedFieldLabel(fieldName = "Color");
	}

	@description = "Verify that a Color Field can be duplicated"
	@ignore = "Test Stub"
	@priority = "5"
	test CanBeDuplicated {
		property forms.functional = "true";
		property portal.acceptance = "false";

		// TODO LPS-133135 CanBeDuplicated pending implementation

	}

	@description = "Verify that a Color Field can be edited"
	@priority = "5"
	test CanBeEdited {
		property forms.functional = "true";
		property portal.acceptance = "false";

		ProductMenu.gotoPortlet(
			category = "Content &amp; Data",
			portlet = "Forms");

		FormsAdminNavigator.gotoAddForm();

		Form.editName(formName = "Form 1");

		Form.gotoAddField(
			fieldPositionNumber = "0",
			fieldType = "Color");

		Form.save();

		FormsAdminNavigator.gotoBack();

		FormsAdminNavigator.gotoEditFormByName(formName = "Form 1");

		FormsAdminNavigator.gotoEditField(fieldName = "Color");

		FormViewBuilder.editFieldLabel(
			fieldLabel = "Color",
			label = "Test Color");

		FormViewBuilder.validateFieldLabel(fieldLabel = "Test Color");

		Form.save();

		FormsAdminNavigator.gotoBack();

		FormsAdminNavigator.gotoEditFormByName(formName = "Form 1");

		FormViewBuilder.validateFieldLabel(fieldLabel = "Test Color");

		FormViewBuilder.validateNoFieldLabel(fieldLabel = "Color");
	}

	@description = "Verify that a Color Field can be required"
	@ignore = "Test Stub"
	@priority = "5"
	test CanBeRequired {
		property forms.functional = "true";
		property portal.acceptance = "false";

		// TODO LPS-133134 CanBeRequired pending implementation

	}

	@description = "Verify that a Color Field can be set to repeatable"
	@ignore = "Test Stub"
	@priority = "5"
	test CanBeSetToRepeatable {
		property forms.functional = "true";
		property portal.acceptance = "false";

		// TODO LPS-133136 CanBeSetToRepeatable pending implementation

	}

	@description = "Verify that a Form can be submitted with the Color Field"
	@ignore = "Test Stub"
	@priority = "5"
	test CanBeSubmitted {
		property forms.functional = "true";
		property portal.acceptance = "false";

		// TODO LPS-133143 CanBeSubmitted pending implementation

	}

	@description = "Verify that changes to the Field can be canceled"
	@ignore = "Test Stub"
	@priority = "4"
	test ChangesCanBeCanceled {
		property forms.functional = "true";
		property portal.acceptance = "false";

		// TODO LPS-133138 ChangesCanBeCanceled pending implementation

	}

	@description = "Verify that a help text can be added to a Color Field"
	@ignore = "Test Stub"
	@priority = "5"
	test HelpTextCanBeAdded {
		property forms.functional = "true";
		property portal.acceptance = "false";

		// TODO LPS-133142 HelpTextCanBeAdded pending implementation

	}

	@description = "Verify that the Field Label can be changed"
	@ignore = "Test Stub"
	@priority = "5"
	test LabelCanBeEdited {
		property forms.functional = "true";
		property portal.acceptance = "false";

		// TODO LPS-133140 LabelCanBeEdited pending implementation

	}

	@description = "Verify that the Field Label can be hidden"
	@ignore = "Test Stub"
	@priority = "5"
	test LabelCanBeHidden {
		property forms.functional = "true";
		property portal.acceptance = "false";

		// TODO LPS-133141 LabelCanBeHidden pending implementation

	}

	@description = "Verify that a Predefined Value can be set for the Color Field"
	@ignore = "Test Stub"
	@priority = "5"
	test PredefinedValueCanBeAdded {
		property forms.functional = "true";
		property portal.acceptance = "false";

		// TODO LPS-133144 PredefinedValueCanBeAdded pending implementation

	}

	@description = "Verify that the Field Reference can be changed"
	@priority = "5"
	test ReferenceCanBeEdited {
		property forms.functional = "true";
		property portal.acceptance = "false";

		ProductMenu.gotoPortlet(
			category = "Content &amp; Data",
			portlet = "Forms");

		FormsAdminNavigator.gotoAddForm();

		Form.editName(formName = "Form 1");

		Form.gotoAddField(
			fieldPositionNumber = "0",
			fieldType = "Color");

		Form.gotoAdvancedTab();

		Form.editFieldReferenceMetal(fieldValue = "Color1234");

		Form.save();

		FormsAdminNavigator.gotoBack();

		FormsAdminNavigator.gotoEditFormByName(formName = "Form 1");

		Form.viewFieldReference(
			fieldName = "Color",
			key_fieldReference = "Color1234");
	}

	@description = "Verify that the Field Type can be changed"
	@ignore = "Test Stub"
	@priority = "5"
	test TypeCanBeChanged {
		property forms.functional = "true";
		property portal.acceptance = "false";

		// TODO LPS-133137 TypeCanBeChanged pending implementation

	}

}