@component-name = "portal-web-forms-and-data-lists"
definition {

	property custom.properties = "minifier.enabled=true";
	property portal.release = "true";
	property portal.upstream = "true";
	property testray.main.component.name = "Forms";

	setUp {
		TestCase.setUpPortalInstance();

		User.firstLoginPG();
	}

	tearDown {
		var testPortalInstance = PropsUtil.get("test.portal.instance");

		if ("${testPortalInstance}" == "true") {
			PortalInstances.tearDownCP();
		}
		else {
			Navigator.openURL();

			ProductMenu.gotoPortlet(
				category = "Content &amp; Data",
				portlet = "Forms");

			FormsAdmin.teardownForms();

			Page.tearDownCP();
		}
	}

	@description = "Verify that Entries can be deleted"
	@priority = "5"
	test CanBeDeleted {
		property forms.functional = "true";
		property portal.acceptance = "false";

		ProductMenu.gotoPortlet(
			category = "Content &amp; Data",
			portlet = "Forms");

		FormsAdminNavigator.gotoAddForm();

		Form.editName(formName = "Form 1");

		Form.addTextField(fieldPositionNumber = "0");

		Form.save();

		Form.publishForm();

		FormsAdminNavigator.gotoPublishedForm();

		FormViewBuilder.editText(
			fieldName = "Text",
			fieldValue = "Test Text");

		FormPortlet.submitSuccessfully();

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content & Data",
			portlet = "Forms");

		FormsAdminNavigator.gotoViewEntries();

		FormsAdmin.viewFormTableEntry(
			fieldLabel = "Text",
			fieldValue = "Test Text");

		FormsAdmin.deleteFormEntry(formEntryValue = "Text");

		FormsAdmin.viewFormTableEntryNotPresent(
			fieldLabel = "Text",
			fieldValue = "Test Text");
	}

	@description = "Verify that Entries can be edited"
	@priority = "5"
	test CanBeEdited {
		property forms.functional = "true";
		property portal.acceptance = "false";

		ProductMenu.gotoPortlet(
			category = "Content &amp; Data",
			portlet = "Forms");

		FormsAdminNavigator.gotoAddForm();

		Form.editName(formName = "Form 1");

		Form.addTextField(fieldPositionNumber = "0");

		Form.save();

		Form.publishForm();

		FormsAdminNavigator.gotoPublishedForm();

		FormViewBuilder.editText(
			fieldName = "Text",
			fieldValue = "Test Text");

		FormPortlet.submitSuccessfully();

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content & Data",
			portlet = "Forms");

		FormsAdminNavigator.gotoViewEntries();

		FormsAdmin.viewFormTableEntry(
			fieldLabel = "Text",
			fieldValue = "Test Text");

		FormsAdmin.editFormEntry(
			fieldValue = "Test Text Edit",
			formEntryValue = "Text");

		FormsAdmin.viewFormTableEntry(
			fieldLabel = "Text",
			fieldValue = "Test Text Edit");
	}

	@description = "Verify that a user can navigate to the correct metric by using the list on the right"
	@ignore = "Test Stub"
	@priority = "5"
	test CanBeNavigatedUsingNavigationList {
		property forms.functional = "true";
		property portal.acceptance = "false";

		// TODO LPS-131084 CanBeNavigatedUsingNavigationList pending implementation

	}

	@description = "Verify that Entries can be viewed"
	@priority = "5"
	test CanBeViewed {
		property forms.functional = "true";
		property portal.acceptance = "false";

		ProductMenu.gotoPortlet(
			category = "Content &amp; Data",
			portlet = "Forms");

		FormsAdminNavigator.gotoAddForm();

		Form.editName(formName = "Form 1");

		Form.addTextField(fieldPositionNumber = "0");

		Form.save();

		Form.publishForm();

		FormsAdminNavigator.gotoPublishedForm();

		FormViewBuilder.editText(
			fieldName = "Text",
			fieldValue = "Test Text");

		FormPortlet.submitSuccessfully();

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content & Data",
			portlet = "Forms");

		FormsAdminNavigator.gotoViewEntries();

		FormsAdminNavigator.gotoView();

		FormsAdmin.viewTextEntry(
			fieldLabel = "Text",
			fieldName = "Text",
			fieldValue = "Test Text");
	}

	@description = "Verify that Entries Previews display the correct information"
	@priority = "5"
	test DisplayCorrectInfoInPreviews {
		property forms.functional = "true";
		property portal.acceptance = "false";

		ProductMenu.gotoPortlet(
			category = "Content &amp; Data",
			portlet = "Forms");

		FormsAdminNavigator.gotoAddForm();

		Form.editName(formName = "Form 1");

		Form.gotoAddField(
			fieldPositionNumber = "0",
			fieldType = "Text");

		FormFields.editText(
			fieldName = "label",
			fieldValue = "Text Label");

		Form.closeSidebar();

		Form.gotoAddField(
			fieldPositionNumber = "1",
			fieldType = "Numeric");

		Form.save();

		Form.publishForm();

		FormsAdminNavigator.gotoPublishedForm();

		FormFields.editText(
			fieldName = "Text",
			fieldValue = "Test Text");

		FormFields.editText(
			fieldName = "Numeric",
			fieldValue = "5");

		FormPortlet.submitSuccessfully();

		FormPortlet.viewSuccessPage(
			successPageDescription = "Your information was successfully received. Thank you for filling out the form.",
			successPageTitle = "Thank you.");

		Navigator.openSpecificURL(url = "http://localhost:8080");

		ProductMenu.gotoPortlet(
			category = "Content &amp; Data",
			portlet = "Forms");

		FormsAdminNavigator.gotoViewEntries();

		FormsAdmin.viewFormTableHeader(fieldHeader = "Text Label");

		FormsAdmin.viewFormTableHeader(fieldHeader = "Numeric");

		FormsAdmin.viewFormEntryWorkflowStatus(formEntryWorkflowStatus = "Test Text");

		FormsAdmin.viewFormEntryWorkflowStatus(formEntryWorkflowStatus = "5");

		FormsAdmin.viewFormEntryWorkflowStatus(formEntryWorkflowStatus = "Approved");

		FormsAdmin.viewFormEntryWorkflowStatus(formEntryWorkflowStatus = "Test Test");
	}

	@description = "Verify that the correct number of Entries are displayed"
	@priority = "3"
	test DisplayCorrectNumberOfEntries {
		property forms.functional = "true";
		property portal.acceptance = "false";

		ProductMenu.gotoPortlet(
			category = "Content &amp; Data",
			portlet = "Forms");

		FormsAdminNavigator.gotoAddForm();

		Form.editName(formName = "Form1");

		Form.addTextField(fieldPositionNumber = "0");

		Form.save();

		Form.publishForm();

		FormsAdminNavigator.gotoPublishedForm();

		FormFields.editText(
			fieldName = "Text",
			fieldValue = "Test Text");

		FormPortlet.submitSuccessfully();

		FormPortlet.viewSuccessPage(
			successPageDescription = "Your information was successfully received. Thank you for filling out the form.",
			successPageTitle = "Thank you.");

		FormsAdminNavigator.closePublishedFormWindow();

		FormsAdminNavigator.gotoEditFormByName(formName = "Form1");

		FormsAdminNavigator.gotoPublishedForm();

		FormFields.editText(
			fieldName = "Text",
			fieldValue = "Test Text2");

		FormPortlet.submitSuccessfully();

		FormPortlet.viewSuccessPage(
			successPageDescription = "Your information was successfully received. Thank you for filling out the form.",
			successPageTitle = "Thank you.");

		FormsAdminNavigator.closePublishedFormWindow();

		FormsAdminNavigator.gotoEditFormByName(formName = "Form1");

		FormsAdminNavigator.gotoEntries();

		FormViewBuilder.viewEntriesTitle(key_entriesTitle = "2 Entries");
	}

	@description = "Verify that Entries for the Color, Date and Text Fields display a Field List in the Summary Tab"
	@priority = "5"
	test DisplayFieldListInSummaryTab {
		property forms.functional = "true";
		property portal.acceptance = "false";

		ProductMenu.gotoPortlet(
			category = "Content &amp; Data",
			portlet = "Forms");

		FormsAdminNavigator.gotoAddForm();

		Form.editName(formName = "Form 1");

		Form.addTextField(fieldPositionNumber = "0");

		Form.closeSidebar();

		Form.gotoAddField(
			fieldPositionNumber = "1",
			fieldType = "Color",
			formPageNumber = "0");

		Form.closeSidebar();

		Form.gotoAddField(
			fieldPositionNumber = "2",
			fieldType = "Date",
			formPageNumber = "0");

		Form.save();

		Form.publishForm();

		FormsAdminNavigator.gotoPublishedForm();

		FormViewBuilder.editText(
			fieldName = "Text",
			fieldValue = "Test Text");

		FormViewBuilder.editColor(
			fieldName = "Color",
			fieldValue = "5F5F5F");

		FormViewBuilder.editDate(
			fieldName = "Date",
			fieldValue = "01/01/2001");

		Click(
			key_text = "Submit",
			locator1 = "Button#ANY");

		AssertElementPresent(locator1 = "Message#SUCCESS");

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content & Data",
			portlet = "Forms");

		FormsAdminNavigator.gotoEditFormByName(formName = "Form 1");

		FormsAdminNavigator.gotoEntries();

		FormViewBuilder.viewSummaryEntry(
			key_card = "Text",
			key_entryName = "Test Text",
			key_entryNumber = "1 entry");

		FormViewBuilder.viewSummaryEntry(
			key_card = "Color",
			key_entryName = "5F5F5F",
			key_entryNumber = "1 entry");

		FormViewBuilder.viewSummaryEntry(
			key_card = "Date",
			key_entryName = "01/01/2001",
			key_entryNumber = "1 entry");
	}

	@description = "Verify that Entries for the Paragraph, Rich Text, Separator, Image, and Upload Fields do not display any metrics in the Summary Tab"
	@priority = "5"
	test DisplayNoMetricsInSummaryTab {
		property forms.functional = "true";
		property portal.acceptance = "false";

		ProductMenu.gotoPortlet(
			category = "Content &amp; Data",
			portlet = "Forms");

		FormsAdminNavigator.gotoAddForm();

		Form.editName(formName = "Form 1");

		Form.gotoAddField(
			fieldPositionNumber = "0",
			fieldType = "Paragraph");

		FormFields.editParagraphBody(content = "Hello");

		Form.closeSidebar();

		Form.gotoAddField(
			fieldPositionNumber = "1",
			fieldType = "Rich Text");

		Form.closeSidebar();

		Form.gotoAddField(
			fieldPositionNumber = "2",
			fieldType = "Separator");

		Form.closeSidebar();

		Form.gotoAddField(
			fieldPositionNumber = "3",
			fieldType = "Image");

		Form.closeSidebar();

		Form.gotoAddField(
			fieldPositionNumber = "4",
			fieldType = "Upload");

		Form.save();

		Form.publishForm();

		FormsAdminNavigator.gotoPublishedForm();

		FormFields.editParagraphBody(content = "Test Text");

		ItemSelector.gotoImageSelectorViaSelectButton();

		ItemSelector.uploadFile(
			navTab = "Documents and Media",
			uploadFileName = "Document_1.jpg");

		ItemSelector.gotoItemSelectorViaSelectButton();

		ItemSelector.uploadFile(
			navTab = "Documents and Media",
			uploadFileName = "Document_2.jpg");

		FormPortlet.submitSuccessfully();

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content & Data",
			portlet = "Forms");

		FormsAdminNavigator.gotoEditFormByName(formName = "Form 1");

		FormsAdminNavigator.gotoEntries();

		AssertElementPresent(
			key_text = "1 Entry",
			locator1 = "FormViewBuilder#ENTRIES_TITLE_CONTENT");

		AssertElementPresent(
			key_value = "There are no entries",
			locator1 = "FormFields#VALIDATION_ERROR_ENTRIES");
	}

	@description = "Verify that Entries for the Numeric Field display a Field List, Average, Maximum Value, Minimum Value, and Sum in the Summary Tab"
	@priority = "5"
	test DisplayStatisticsInSummaryTab {
		property forms.functional = "true";
		property portal.acceptance = "false";

		ProductMenu.gotoPortlet(
			category = "Content &amp; Data",
			portlet = "Forms");

		FormsAdminNavigator.gotoAddForm();

		Form.editName(formName = "Form 1");

		Form.gotoAddField(
			fieldPositionNumber = "0",
			fieldType = "Numeric",
			formPageNumber = "0");

		Form.save();

		Form.publishForm();

		FormsAdminNavigator.gotoPublishedForm();

		FormViewBuilder.editText(
			fieldName = "Numeric",
			fieldValue = "5");

		FormPortlet.submitSuccessfully();

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content & Data",
			portlet = "Forms");

		FormsAdminNavigator.gotoEditFormByName(formName = "Form 1");

		FormsAdminNavigator.gotoPublishedForm();

		FormViewBuilder.editText(
			fieldName = "Numeric",
			fieldValue = "11");

		FormPortlet.submitSuccessfully();

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content & Data",
			portlet = "Forms");

		FormsAdminNavigator.gotoEditFormByName(formName = "Form 1");

		FormsAdminNavigator.gotoEntries();

		FormViewBuilder.viewSummaryEntryNumeric(
			key_averageValue = "8",
			key_maxValue = "11",
			key_minValue = "5",
			key_sumValue = "16");
	}

	@description = "Verify that with Single Approver Workflow enabled and after the form entry was approved, the entry will have an approved label"
	@priority = "5"
	test WorkflowApprovalChangesLabelToApproved {
		property forms.functional = "true";
		property portal.acceptance = "false";

		ProductMenu.gotoPortlet(
			category = "Content &amp; Data",
			portlet = "Forms");

		FormsAdminNavigator.gotoAddForm();

		Form.editName(formName = "Form 1");

		Form.addTextField(fieldPositionNumber = "0");

		Form.closeSidebar();

		FormsAdminNavigator.gotoSettings();

		Form.configureWorkflow(workflowDefinition = "Single Approver");

		Form.save();

		Form.publishForm();

		FormsAdminNavigator.gotoPublishCopyURLLink();

		var publishedFormURL = Form.getPublishedFormPublicURL(
			publishedFormPublicURL = "${publishedFormPublicURL}"
		);

		JSONUser.addUser(
			userEmailAddress = "user1@liferay.com",
			userFirstName = "user1",
			userLastName = "user1",
			userScreenName = "user1");

		JSONUser.setFirstPassword(
			agreeToTermsAndAnswerReminderQuery = "true",
			requireReset = "false",
			userEmailAddress = "user1@liferay.com");

		Navigator.openURL();

		ApplicationsMenu.gotoPortlet(
			category = "Configuration",
			panel = "Control Panel",
			portlet = "Instance Settings");

		PortalSettings.gotoConfiguration(
			configurationCategory = "User Authentication",
			configurationName = "General",
			configurationScope = "Virtual Instance Scope");

		PortalSettings.uncheckStrangersVerifyEmailCheckbox();

		User.logoutAndLoginPG(
			userLoginEmailAddress = "user1@liferay.com",
			userScreenName = "user1");

		Navigator.openURL();

		Navigator.openSpecificURL(url = "${publishedFormURL}");

		FormViewBuilder.editText(
			fieldName = "Text",
			fieldValue = "Test Text");

		AssertClick(
			locator1 = "Button#SUBMIT_FOR_PUBLICATION",
			value1 = "Submit for Publication");

		Alert.viewSuccessMessage();

		Navigator.openURL();

		User.logoutAndLoginPG(
			userLoginEmailAddress = "test@liferay.com",
			userScreenName = "Test Test");

		WorkflowAsset.gotoViaNotification(
			assetType = "Form Record",
			user = "user1 user1");

		LexiconEntry.gotoEllipsisMenuItem(menuItem = "Assign to Me");

		Workflow.confirmWorkflowAction();

		LexiconEntry.gotoEllipsisMenuItem(menuItem = "Approve");

		Workflow.confirmWorkflowAction();

		Alert.viewSuccessMessage();

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content & Data",
			portlet = "Forms");

		FormsAdminNavigator.gotoViewEntries();

		FormsAdmin.viewFormTableEntry(
			fieldLabel = "Status",
			fieldValue = "Approved");
	}

	@description = "Verify that with Single Approver Workflow enabled, the Submit button now reads "Submit for Publication""
	@priority = "5"
	test WorkflowChangesSubmitButtonToSubmitForPublication {
		property forms.functional = "true";
		property portal.acceptance = "false";

		ProductMenu.gotoPortlet(
			category = "Content &amp; Data",
			portlet = "Forms");

		FormsAdminNavigator.gotoAddForm();

		Form.editName(formName = "Form 1");

		Form.addTextField(fieldPositionNumber = "0");

		Form.closeSidebar();

		FormsAdminNavigator.gotoSettings();

		Form.configureWorkflow(workflowDefinition = "Single Approver");

		Form.save();

		Form.publishForm();

		FormsAdminNavigator.gotoPublishedForm();

		Form.viewSubmitButtonText(key_buttonText = "Submit for Publication");
	}

	@description = "Verify that with Single Approver Workflow enabled and after the user Submit for Publication, the form entry will have a pending label"
	@priority = "5"
	test WorkflowSubmissionChangesLabelToPending {
		property forms.functional = "true";
		property portal.acceptance = "false";

		ProductMenu.gotoPortlet(
			category = "Content &amp; Data",
			portlet = "Forms");

		FormsAdminNavigator.gotoAddForm();

		Form.editName(formName = "Form 1");

		Form.gotoAddField(
			fieldPositionNumber = "0",
			fieldType = "Text");

		FormsAdminNavigator.gotoSettings();

		Form.configureWorkflow(workflowDefinition = "Single Approver");

		Form.save();

		Form.publishForm();

		FormsAdminNavigator.openPublishURL(publishFormURL = "${publishedFormPublicURL}");

		FormFields.editText(
			fieldName = "Text",
			fieldValue = "Test Text");

		FormPortlet.submitLocalizedSuccessfully(buttonName = "Submit for Publication");

		FormPortlet.viewSuccessPage(
			successPageDescription = "Your information was successfully received. Thank you for filling out the form.",
			successPageTitle = "Thank you.");

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content & Data",
			portlet = "Forms");

		FormsAdminNavigator.gotoViewEntries();

		FormsAdmin.viewFormEntryWorkflowStatus(formEntryWorkflowStatus = "Pending");
	}

}