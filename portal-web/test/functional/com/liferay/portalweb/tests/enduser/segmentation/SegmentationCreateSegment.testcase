@component-name = "portal-segmentation"
definition {

	property custom.properties = "jsonws.web.service.paths.excludes=";
	property portal.release = "true";
	property portal.upstream = "true";
	property testray.main.component.name = "Segmentation";

	setUp {
		TestCase.setUpPortalInstance();

		User.firstLoginPG();

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "People",
			portlet = "Segments");
	}

	tearDown {
		var testPortalInstance = PropsUtil.get("test.portal.instance");

		if ("${testPortalInstance}" == "true") {
			PortalInstances.tearDownCP();
		}
		else {
			ProductMenu.gotoPortlet(
				category = "People",
				portlet = "Segments");

			if (IsElementPresent(locator1 = "Segmentation#SEGMENT_LIST")) {
				Segmentation.tearDown();
			}

			JSONUser.tearDownNonAdminUsers();

			JSONOrganization.deleteOrganizationByName(
				organizationName = "Organization Name",
				parentOrganizationName = "Parent Organization Name");

			JSONOrganization.deleteOrganizationByName(organizationName = "Parent Organization Name");
		}
	}

	@description = "This is a test for LPS-130281."
	@priority = "5"
	test AddSegmentByOrganizationCountry {
		property portal.acceptance = "false";

		JSONUser.addUser(
			userEmailAddress = "userea@liferay.com",
			userFirstName = "userfn",
			userLastName = "userln",
			userScreenName = "usersn");

		JSONUser.setFirstPassword(
			agreeToTermsAndAnswerReminderQuery = "true",
			requireReset = "false",
			userEmailAddress = "userea@liferay.com");

		JSONOrganization.addOrganization(organizationName = "Organization Name");

		JSONOrganization.assignUserToOrganization(
			organizationName = "Organization Name",
			userEmailAddress = "userea@liferay.com");

		ApplicationsMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Users and Organizations");

		Organization.editOrganizationCP(orgName = "Organization Name");

		Select(
			locator1 = "Select#COUNTRY",
			value1 = "Spain");

		PortletEntry.save();

		Segmentation.openSegmentsAdmin(siteURLKey = "guest");

		LexiconEntry.gotoAdd();

		Segmentation.gotoSidebar(fieldType = "Organization");

		Segmentation.addProperties(propertyOption = "Country");

		Segmentation.fillProperty(optionsValue = "Spain");

		Segmentation.fillTitle(titleField = "AddSegmentByOrganizationCountry Test");

		Segmentation.viewMembers(memberName = "userfn userln");

		Button.clickSave();

		Alert.viewSuccessMessage();

		Segmentation.editSegment(entry = "AddSegmentByOrganizationCountry Test");

		Segmentation.viewSegment(
			criterion = "options",
			value = "spain");
	}

	@description = "This is a test for LPS-130275."
	@priority = "5"
	test AddSegmentByOrganizationDateModified {
		property portal.acceptance = "false";

		JSONUser.addUser(
			userEmailAddress = "userea@liferay.com",
			userFirstName = "userfn",
			userLastName = "userln",
			userScreenName = "usersn");

		JSONUser.setFirstPassword(
			agreeToTermsAndAnswerReminderQuery = "true",
			requireReset = "false",
			userEmailAddress = "userea@liferay.com");

		JSONOrganization.addOrganization(organizationName = "Organization Name");

		JSONOrganization.assignUserToOrganization(
			organizationName = "Organization Name",
			userEmailAddress = "userea@liferay.com");

		LexiconEntry.gotoAdd();

		Segmentation.gotoSidebar(fieldType = "Organization");

		Segmentation.addProperties(propertyOption = "Date Modified");

		Segmentation.changeCriterionInput(criterionInputOption = "Greater Than");

		Segmentation.fillTitle(titleField = "AddSegmentByOrganizationDateModified Test");

		Segmentation.viewMembers(memberName = "userfn userln");

		Button.clickSave();

		Alert.viewSuccessMessage();

		Segmentation.editSegment(entry = "AddSegmentByOrganizationDateModified Test");

		var displayDateDay = DateUtil.getCurrentDate();
		var displayDateMonth = DateUtil.getCurrentMonth();

		if (("${displayDateMonth}" != "10") && ("${displayDateMonth}" != "11") && ("${displayDateMonth}" != "12")) {
			var displayDateMonth= "0${displayDateMonth}";
		}

		var displayDateYear = DateUtil.getCurrentYear();

		var i = MathUtil.quotient("${displayDateDay}", "10");

		if ("${i}" == "0") {
			var displayDateDay= "0${displayDateDay}";
		}

		var displayDate = "${displayDateYear}-${displayDateMonth}-${displayDateDay}";

		Segmentation.viewSegment(
			criterion = "date",
			value = "${displayDate}");
	}

	@description = "This is a test for LPS-130276."
	@priority = "5"
	test AddSegmentByOrganizationHierarchyPath {
		property portal.acceptance = "false";

		JSONUser.addUser(
			userEmailAddress = "userea@liferay.com",
			userFirstName = "userfn",
			userLastName = "userln",
			userScreenName = "usersn");

		JSONUser.setFirstPassword(
			agreeToTermsAndAnswerReminderQuery = "true",
			requireReset = "false",
			userEmailAddress = "userea@liferay.com");

		JSONOrganization.addOrganization(organizationName = "Organization Name");

		JSONOrganization.assignUserToOrganization(
			organizationName = "Organization Name",
			userEmailAddress = "userea@liferay.com");

		LexiconEntry.gotoAdd();

		Segmentation.gotoSidebar(fieldType = "Organization");

		Segmentation.addProperties(propertyOption = "Hierarchy Path");

		Segmentation.fillProperty(propertyField = "Organization Name");

		Segmentation.fillTitle(titleField = "AddSegmentByOrganizationHierarchyPath Test");

		Segmentation.viewMembers(memberName = "userfn userln");

		Button.clickSave();

		Alert.viewSuccessMessage();

		Segmentation.editSegment(entry = "AddSegmentByOrganizationHierarchyPath Test");

		Segmentation.viewSegment(propertyField = "Organization Name");
	}

	@description = "This is a test for LPS-130277."
	@priority = "5"
	test AddSegmentByOrganizationName {
		property portal.acceptance = "false";

		JSONUser.addUser(
			userEmailAddress = "userea@liferay.com",
			userFirstName = "userfn",
			userLastName = "userln",
			userScreenName = "usersn");

		JSONUser.setFirstPassword(
			agreeToTermsAndAnswerReminderQuery = "true",
			requireReset = "false",
			userEmailAddress = "userea@liferay.com");

		JSONOrganization.addOrganization(organizationName = "Organization Name");

		JSONOrganization.assignUserToOrganization(
			organizationName = "Organization Name",
			userEmailAddress = "userea@liferay.com");

		LexiconEntry.gotoAdd();

		Segmentation.gotoSidebar(fieldType = "Organization");

		Segmentation.addProperties(propertyOption = "Name");

		Segmentation.fillProperty(propertyField = "Organization Name");

		Segmentation.fillTitle(titleField = "AddSegmentByOrganizationName Test");

		Segmentation.viewMembers(memberName = "userfn userln");

		Button.clickSave();

		Alert.viewSuccessMessage();

		Segmentation.editSegment(entry = "AddSegmentByOrganizationName Test");

		Segmentation.viewSegment(propertyField = "Organization Name");
	}

	@description = "This is a test for LPS-130278."
	@ignore = "true"
	@priority = "5"
	test AddSegmentByOrganizationOrganization {
		property portal.acceptance = "false";

		JSONUser.addUser(
			userEmailAddress = "userea@liferay.com",
			userFirstName = "userfn",
			userLastName = "userln",
			userScreenName = "usersn");

		JSONUser.setFirstPassword(
			agreeToTermsAndAnswerReminderQuery = "true",
			requireReset = "false",
			userEmailAddress = "userea@liferay.com");

		JSONOrganization.addOrganization(organizationName = "Organization Name");

		JSONOrganization.assignUserToOrganization(
			organizationName = "Organization Name",
			userEmailAddress = "userea@liferay.com");

		LexiconEntry.gotoAdd();

		Segmentation.gotoSidebar(fieldType = "Organization");

		Segmentation.addProperties(propertyOption = "Organization");

		Segmentation.fillProperty(selectCheckbox = "Organization Name");

		Segmentation.fillTitle(titleField = "AddSegmentByOrganizationOrganization Test");

		Segmentation.viewMembers(memberName = "userfn userln");

		Button.clickSave();

		Alert.viewSuccessMessage();

		Segmentation.editSegment(entry = "AddSegmentByOrganizationOrganization Test");

		Segmentation.viewSegment(
			criterion = "select-input",
			value = "Organization Name");
	}

	@description = "This is a test for LPS-130279."
	@priority = "5"
	test AddSegmentByOrganizationParentOrganization {
		property portal.acceptance = "false";

		JSONUser.addUser(
			userEmailAddress = "userea@liferay.com",
			userFirstName = "userfn",
			userLastName = "userln",
			userScreenName = "usersn");

		JSONUser.setFirstPassword(
			agreeToTermsAndAnswerReminderQuery = "true",
			requireReset = "false",
			userEmailAddress = "userea@liferay.com");

		JSONOrganization.addOrganization(organizationName = "Parent Organization Name");

		JSONOrganization.addOrganization(
			organizationName = "Organization Name",
			parentOrganizationName = "Parent Organization Name");

		JSONOrganization.assignUserToOrganization(
			organizationName = "Organization Name",
			parentOrganizationName = "Parent Organization Name",
			userEmailAddress = "userea@liferay.com");

		LexiconEntry.gotoAdd();

		Segmentation.gotoSidebar(fieldType = "Organization");

		Segmentation.addProperties(propertyOption = "Parent Organization");

		Segmentation.fillProperty(selectCheckbox = "Parent Organization Name");

		Segmentation.fillTitle(titleField = "AddSegmentByOrganizationParentOrganization Test");

		Segmentation.viewMembers(memberName = "userfn userln");

		Button.clickSave();

		Alert.viewSuccessMessage();

		Segmentation.editSegment(entry = "AddSegmentByOrganizationParentOrganization Test");

		Segmentation.viewSegment(
			criterion = "select-input",
			value = "Parent Organization Name");
	}

	@description = "This is a test for LPS-130282."
	@priority = "5"
	test AddSegmentByOrganizationRegion {
		property portal.acceptance = "false";

		JSONUser.addUser(
			userEmailAddress = "userea@liferay.com",
			userFirstName = "userfn",
			userLastName = "userln",
			userScreenName = "usersn");

		JSONUser.setFirstPassword(
			agreeToTermsAndAnswerReminderQuery = "true",
			requireReset = "false",
			userEmailAddress = "userea@liferay.com");

		JSONOrganization.addOrganization(organizationName = "Organization Name");

		JSONOrganization.assignUserToOrganization(
			organizationName = "Organization Name",
			userEmailAddress = "userea@liferay.com");

		ApplicationsMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Users and Organizations");

		Organization.editOrganizationCP(orgName = "Organization Name");

		Select(
			locator1 = "Select#COUNTRY",
			value1 = "Spain");

		Select(
			locator1 = "Select#REGION",
			value1 = "Madrid");

		PortletEntry.save();

		Segmentation.openSegmentsAdmin(siteURLKey = "guest");

		LexiconEntry.gotoAdd();

		Segmentation.gotoSidebar(fieldType = "Organization");

		Segmentation.addProperties(propertyOption = "Region");

		Segmentation.fillProperty(optionsValue = "Spain - Madrid");

		Segmentation.fillTitle(titleField = "AddSegmentByOrganizationRegion Test");

		Segmentation.viewMembers(memberName = "userfn userln");

		Button.clickSave();

		Alert.viewSuccessMessage();

		Segmentation.editSegment(entry = "AddSegmentByOrganizationRegion Test");

		Segmentation.viewSegment(
			criterion = "options",
			value = "madrid");
	}

	@description = "This is a test for LPS-130283."
	@priority = "5"
	test AddSegmentByOrganizationTag {
		property portal.acceptance = "false";

		JSONUser.addUser(
			userEmailAddress = "userea@liferay.com",
			userFirstName = "userfn",
			userLastName = "userln",
			userScreenName = "usersn");

		JSONUser.setFirstPassword(
			agreeToTermsAndAnswerReminderQuery = "true",
			requireReset = "false",
			userEmailAddress = "userea@liferay.com");

		JSONOrganization.addOrganization(organizationName = "Organization Name");

		JSONOrganization.assignUserToOrganization(
			organizationName = "Organization Name",
			userEmailAddress = "userea@liferay.com");

		ApplicationsMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Users and Organizations");

		Organization.editOrganizationCP(orgName = "Organization Name");

		AssetCategorization.addTag(tagName = "tagName");

		PortletEntry.save();

		Segmentation.openSegmentsAdmin(siteURLKey = "guest");

		LexiconEntry.gotoAdd();

		Segmentation.gotoSidebar(fieldType = "Organization");

		Segmentation.addProperties(propertyOption = "Tag");

		Segmentation.fillProperty(selectLink = "tagname");

		Segmentation.fillTitle(titleField = "AddSegmentByOrganizationTag Test");

		Segmentation.viewMembers(memberName = "userfn userln");

		Button.clickSave();

		Alert.viewSuccessMessage();

		Segmentation.editSegment(entry = "AddSegmentByOrganizationTag Test");

		Segmentation.viewSegment(
			criterion = "select-input",
			value = "tagname");
	}

	@description = "This is a test for LPS-130280."
	@priority = "5"
	test AddSegmentByOrganizationType {
		property portal.acceptance = "false";

		JSONUser.addUser(
			userEmailAddress = "userea@liferay.com",
			userFirstName = "userfn",
			userLastName = "userln",
			userScreenName = "usersn");

		JSONUser.setFirstPassword(
			agreeToTermsAndAnswerReminderQuery = "true",
			requireReset = "false",
			userEmailAddress = "userea@liferay.com");

		JSONOrganization.addOrganization(organizationName = "Organization Name");

		JSONOrganization.assignUserToOrganization(
			organizationName = "Organization Name",
			userEmailAddress = "userea@liferay.com");

		LexiconEntry.gotoAdd();

		Segmentation.gotoSidebar(fieldType = "Organization");

		Segmentation.addProperties(propertyOption = "Type");

		Segmentation.fillProperty(propertyField = "organization");

		Segmentation.fillTitle(titleField = "AddSegmentByOrganizationType Test");

		Segmentation.viewMembers(memberName = "userfn userln");

		Button.clickSave();

		Alert.viewSuccessMessage();

		Segmentation.editSegment(entry = "AddSegmentByOrganizationType Test");

		Segmentation.viewSegment(propertyField = "organization");
	}

	@description = "This is a test for LPS-130345."
	@priority = "5"
	test AddSegmentByOtherSegments {
		property portal.acceptance = "false";

		JSONUser.addUser(
			userEmailAddress = "userea1@liferay.com",
			userFirstName = "userfn1",
			userLastName = "userln1",
			userScreenName = "usersn1");

		JSONUser.addUser(
			userEmailAddress = "userea2@liferay.com",
			userFirstName = "userfn2",
			userLastName = "userln2",
			userScreenName = "usersn2");

		JSONSegmentsentry.addSegment(
			fieldName = "Screen Name",
			groupName = "Global",
			operator = "equals",
			segmentName = "Segment With User1",
			text = "usersn1");

		JSONSegmentsentry.addSegment(
			fieldName = "Screen Name",
			groupName = "Global",
			operator = "equals",
			segmentName = "Segment With User2",
			text = "usersn2");

		LexiconEntry.gotoAdd();

		Segmentation.gotoSidebar(fieldType = "Segments");

		Segmentation.addProperties(propertyOption = "Segment");

		Segmentation.fillProperty(selectLink = "Segment With User1");

		Segmentation.addProperties(propertyOption = "Segment");

		Segmentation.fillProperty(
			indexNumber = "2",
			selectLink = "Segment With User2");

		Segmentation.changeCriterionConjunction(criterionConjunctionItem = "Or");

		Segmentation.fillTitle(titleField = "AddSegmentByOtherSegments Test");

		Segmentation.viewMembers(memberNameList = "userfn1 userln1,userfn2 userln2");

		Button.clickSave();

		Alert.viewSuccessMessage();
	}

	@description = "This is a test for LPS-130346."
	@priority = "5"
	test AddSegmentByOtherSegmentsUnableToAddNewSegments {
		property portal.acceptance = "false";

		LexiconEntry.gotoAdd();

		Segmentation.gotoSidebar(fieldType = "Segments");

		Segmentation.addProperties(propertyOption = "Segment");

		AssertElementNotPresent(locator1 = "Button#PLUS");

		Click(locator1 = "Button#SELECT");

		SelectFrame(locator1 = "IFrame#MODAL_BODY");

		AssertElementNotPresent(locator1 = "Button#PLUS");

		SelectFrame.selectFrameTop();

		Click(locator1 = "Icon#CLOSE");
	}

	@description = "This is a test for LPS-130347."
	@priority = "5"
	test AddSegmentByOtherSegmentsWarning {
		property portal.acceptance = "false";

		JSONUser.addUser(
			userEmailAddress = "userea1@liferay.com",
			userFirstName = "userfn1",
			userLastName = "userln1",
			userScreenName = "usersn1");

		JSONUser.addUser(
			userEmailAddress = "userea2@liferay.com",
			userFirstName = "userfn2",
			userLastName = "userln2",
			userScreenName = "usersn2");

		JSONSegmentsentry.addSegment(
			fieldName = "First Name",
			groupName = "Global",
			operator = "equals",
			segmentName = "Segment With User1",
			text = "userfn1");

		JSONSegmentsentry.addSegment(
			fieldName = "First Name",
			groupName = "Global",
			operator = "equals",
			segmentName = "Segment With User2",
			text = "userfn2");

		LexiconEntry.gotoAdd();

		Segmentation.gotoSidebar(fieldType = "Segments");

		Segmentation.addProperties(propertyOption = "Segment");

		Segmentation.fillProperty(selectLink = "Segment With User1");

		Segmentation.addProperties(propertyOption = "Segment");

		Segmentation.fillProperty(
			indexNumber = "2",
			selectLink = "Segment With User2");

		Segmentation.changeCriterionConjunction(criterionConjunctionItem = "Or");

		Segmentation.fillTitle(titleField = "AddSegmentByOtherSegmentsWarning Test");

		Button.clickSave();

		Segmentation.openSegmentsAdmin(siteURLKey = "guest");

		Segmentation.deleteSegment(entry = "Segment With User1");

		Segmentation.editSegment(entry = "AddSegmentByOtherSegmentsWarning Test");

		Alert.viewErrorMessage(errorMessage = "Delete this condition. It was created from an element that no longer exists.");
	}

	@description = "This is a test for LPS-130313."
	@priority = "5"
	test AddSegmentBySessionBrowser {
		property portal.acceptance = "false";

		LexiconEntry.gotoAdd();

		Segmentation.gotoSidebar(fieldType = "Session");

		Segmentation.addProperties(propertyOption = "Browser");

		Segmentation.fillTitle(titleField = "AddSegmentBySessionBrowser Test");

		Segmentation.fillProperty(propertyField = "Chrome");

		Button.clickSave();

		Alert.viewSuccessMessage();

		Segmentation.editSegment(entry = "AddSegmentBySessionBrowser Test");

		Segmentation.viewSegment(propertyField = "Chrome");
	}

	@description = "This is a test for LPS-130314."
	@priority = "5"
	test AddSegmentBySessionCookies {
		property portal.acceptance = "false";

		LexiconEntry.gotoAdd();

		Segmentation.gotoSidebar(fieldType = "Session");

		Segmentation.addProperties(propertyOption = "Cookies");

		Segmentation.fillTitle(titleField = "AddSegmentBySessionCookies Test");

		Segmentation.fillProperty(
			criterionKey = "GUEST_LANGUAGE_ID",
			criterionValue = "en_US");

		Button.clickSave();

		Alert.viewSuccessMessage();

		Segmentation.editSegment(entry = "AddSegmentBySessionCookies Test");

		Segmentation.viewSegment(
			criterionKey = "GUEST_LANGUAGE_ID",
			criterionValue = "en_US");
	}

	@description = "This is a test for LPS-130315."
	@priority = "5"
	test AddSegmentBySessionDeviceBrand {
		property portal.acceptance = "false";

		LexiconEntry.gotoAdd();

		Segmentation.gotoSidebar(fieldType = "Session");

		Segmentation.addProperties(propertyOption = "Device Brand");

		Segmentation.fillTitle(titleField = "AddSegmentBySessionDeviceBrand Test");

		Segmentation.fillProperty(propertyField = "Apple");

		Button.clickSave();

		Alert.viewSuccessMessage();

		Segmentation.editSegment(entry = "AddSegmentBySessionDeviceBrand Test");

		Segmentation.viewSegment(propertyField = "Apple");
	}

	@description = "This is a test for LPS-130316."
	@priority = "5"
	test AddSegmentBySessionDeviceModel {
		property portal.acceptance = "false";

		LexiconEntry.gotoAdd();

		Segmentation.gotoSidebar(fieldType = "Session");

		Segmentation.addProperties(propertyOption = "Device Model");

		Segmentation.fillTitle(titleField = "AddSegmentBySessionDeviceModel Test");

		Segmentation.fillProperty(propertyField = "ios");

		Button.clickSave();

		Alert.viewSuccessMessage();

		Segmentation.editSegment(entry = "AddSegmentBySessionDeviceModel Test");

		Segmentation.viewSegment(propertyField = "ios");
	}

	@description = "This is a test for LPS-130317."
	@priority = "5"
	test AddSegmentBySessionDeviceScreenResolutionHeight {
		property portal.acceptance = "false";

		LexiconEntry.gotoAdd();

		Segmentation.gotoSidebar(fieldType = "Session");

		Segmentation.addProperties(propertyOption = "Device Screen Resolution Height");

		Segmentation.fillTitle(titleField = "AddSegmentBySessionDeviceScreenResolutionHeight Test");

		Segmentation.fillProperty(resolutionValue = "480");

		Button.clickSave();

		Alert.viewSuccessMessage();

		Segmentation.editSegment(entry = "AddSegmentBySessionDeviceScreenResolutionHeight Test");

		Segmentation.viewSegment(
			criterion = "decimal-number",
			value = "480.00");
	}

	@description = "This is a test for LPS-130318."
	@priority = "5"
	test AddSegmentBySessionDeviceScreenResolutionWidth {
		property portal.acceptance = "false";

		LexiconEntry.gotoAdd();

		Segmentation.gotoSidebar(fieldType = "Session");

		Segmentation.addProperties(propertyOption = "Device Screen Resolution Width");

		Segmentation.fillTitle(titleField = "AddSegmentBySessionDeviceScreenResolutionWidth Test");

		Segmentation.fillProperty(resolutionValue = "320");

		Button.clickSave();

		Alert.viewSuccessMessage();

		Segmentation.editSegment(entry = "AddSegmentBySessionDeviceScreenResolutionWidth Test");

		Segmentation.viewSegment(
			criterion = "decimal-number",
			value = "320.00");
	}

	@description = "This is a test for LPS-130319."
	@priority = "5"
	test AddSegmentBySessionHostname {
		property portal.acceptance = "false";

		LexiconEntry.gotoAdd();

		Segmentation.gotoSidebar(fieldType = "Session");

		Segmentation.addProperties(propertyOption = "Hostname");

		Segmentation.fillTitle(titleField = "AddSegmentBySessionHostname Test");

		Segmentation.fillProperty(propertyField = "localhost");

		Button.clickSave();

		Alert.viewSuccessMessage();

		Segmentation.editSegment(entry = "AddSegmentBySessionHostname Test");

		Segmentation.viewSegment(propertyField = "localhost");
	}

	@description = "This is a test for LPS-130351."
	@priority = "5"
	test AddSegmentBySessionLanguage {
		property portal.acceptance = "false";

		LexiconEntry.gotoAdd();

		Segmentation.gotoSidebar(fieldType = "Session");

		Segmentation.addProperties(propertyOption = "Language");

		Segmentation.fillTitle(titleField = "AddSegmentBySessionLanguage Test");

		Select(
			key_criterion = "options",
			locator1 = "Segmentation#CRITERION_INPUT_FORM_CONTROL",
			value1 = "Spanish (Spain)");

		Button.clickSave();

		Alert.viewSuccessMessage();

		Segmentation.editSegment(entry = "AddSegmentBySessionLanguage Test");

		Segmentation.viewSegment(
			criterion = "options",
			value = "es_ES");
	}

	@description = "This is a test for LPS-130320."
	@priority = "5"
	test AddSegmentBySessionLastSignInDate {
		property portal.acceptance = "false";

		LexiconEntry.gotoAdd();

		Segmentation.gotoSidebar(fieldType = "Session");

		Segmentation.addProperties(propertyOption = "Last Sign In Date");

		Segmentation.fillTitle(titleField = "AddSegmentBySessionLastSignInDate Test");

		Segmentation.fillProperty(dateValue = "03/31/2021");

		Button.clickSave();

		Alert.viewSuccessMessage();

		Segmentation.editSegment(entry = "AddSegmentBySessionLastSignInDate Test");

		Segmentation.viewSegment(
			criterion = "date",
			value = "2021-03-31");
	}

	@description = "This is a test for LPS-130321."
	@priority = "5"
	test AddSegmentBySessionLocalDate {
		property portal.acceptance = "false";

		LexiconEntry.gotoAdd();

		Segmentation.gotoSidebar(fieldType = "Session");

		Segmentation.addProperties(propertyOption = "Local Date");

		Segmentation.fillTitle(titleField = "AddSegmentBySessionLocalDate Test");

		Segmentation.fillProperty(dateValue = "03/31/2021");

		Button.clickSave();

		Alert.viewSuccessMessage();

		Segmentation.editSegment(entry = "AddSegmentBySessionLocalDate Test");

		Segmentation.viewSegment(
			criterion = "date",
			value = "2021-03-31");
	}

	@description = "This is a test for LPS-130322."
	@priority = "5"
	test AddSegmentBySessionReferrerURL {
		property portal.acceptance = "false";

		LexiconEntry.gotoAdd();

		Segmentation.gotoSidebar(fieldType = "Session");

		Segmentation.addProperties(propertyOption = "Referrer URL");

		Segmentation.fillTitle(titleField = "AddSegmentBySessionReferrerURL Test");

		Segmentation.fillProperty(propertyField = "http://localhost:8080");

		Button.clickSave();

		Alert.viewSuccessMessage();

		Segmentation.editSegment(entry = "AddSegmentBySessionReferrerURL Test");

		Segmentation.viewSegment(propertyField = "http://localhost:8080");
	}

	@description = "This is a test for LPS-130323."
	@priority = "5"
	test AddSegmentBySessionRequestParameters {
		property portal.acceptance = "false";

		LexiconEntry.gotoAdd();

		Segmentation.gotoSidebar(fieldType = "Session");

		Segmentation.addProperties(propertyOption = "Request Parameters");

		Segmentation.fillTitle(titleField = "AddSegmentBySessionRequestParameters Test");

		Segmentation.fillProperty(
			criterionKey = "languageId",
			criterionValue = "en_US");

		Button.clickSave();

		Alert.viewSuccessMessage();

		Segmentation.editSegment(entry = "AddSegmentBySessionRequestParameters Test");

		Segmentation.viewSegment(
			criterionKey = "languageId",
			criterionValue = "en_US");
	}

	@description = "This is a test for LPS-130324."
	@priority = "5"
	test AddSegmentBySessionSignedIn {
		property portal.acceptance = "false";

		LexiconEntry.gotoAdd();

		Segmentation.gotoSidebar(fieldType = "Session");

		Segmentation.addProperties(propertyOption = "Signed In");

		Segmentation.fillTitle(titleField = "Signed In Test");

		Select(
			key_criterion = "options",
			locator1 = "Segmentation#CRITERION_INPUT_FORM_CONTROL",
			value1 = "FALSE");

		Button.clickSave();

		Alert.viewSuccessMessage();

		Segmentation.editSegment(entry = "Signed In Test");

		Segmentation.viewSegment(
			criterion = "options",
			value = "false");
	}

	@description = "This is a test for LPS-130325."
	@priority = "5"
	test AddSegmentBySessionURL {
		property portal.acceptance = "false";

		LexiconEntry.gotoAdd();

		Segmentation.gotoSidebar(fieldType = "Session");

		Segmentation.addProperties(propertyOption = "URL");

		Segmentation.fillTitle(titleField = "AddSegmentBySessionURL Test");

		Segmentation.fillProperty(propertyField = "http://localhost:8080");

		Button.clickSave();

		Alert.viewSuccessMessage();

		Segmentation.editSegment(entry = "AddSegmentBySessionURL Test");

		Segmentation.viewSegment(propertyField = "http://localhost:8080");
	}

	@description = "This is a test for LPS-130326."
	@priority = "5"
	test AddSegmentBySessionUserAgent {
		property portal.acceptance = "false";

		LexiconEntry.gotoAdd();

		Segmentation.gotoSidebar(fieldType = "Session");

		Segmentation.addProperties(propertyOption = "User Agent");

		Segmentation.fillTitle(titleField = "AddSegmentBySessionUserAgent Test");

		Segmentation.changeCriterionInput(criterionInputOption = "Contains");

		Segmentation.fillProperty(propertyField = "Chrome");

		Button.clickSave();

		Alert.viewSuccessMessage();

		Segmentation.editSegment(entry = "AddSegmentBySessionUserAgent Test");

		Segmentation.viewSegment(
			criterionInputOption = "contains",
			propertyField = "Chrome");
	}

	@description = "This is a test for LPS-130284."
	@priority = "5"
	test AddSegmentByUserDateModified {
		property portal.acceptance = "false";

		JSONUser.addUser(
			userEmailAddress = "userea@liferay.com",
			userFirstName = "userfn",
			userLastName = "userln",
			userScreenName = "usersn");

		JSONUser.setFirstPassword(
			agreeToTermsAndAnswerReminderQuery = "true",
			requireReset = "false",
			userEmailAddress = "userea@liferay.com");

		LexiconEntry.gotoAdd();

		Segmentation.addProperties(propertyOption = "Date Modified");

		Segmentation.changeCriterionInput(criterionInputOption = "Greater Than");

		Segmentation.fillTitle(titleField = "AddSegmentByUserDateModified Test");

		Segmentation.viewMembers(memberName = "userfn userln");

		Button.clickSave();

		Alert.viewSuccessMessage();

		Segmentation.editSegment(entry = "AddSegmentByUserDateModified Test");

		var displayDateDay = DateUtil.getCurrentDate();
		var displayDateMonth = DateUtil.getCurrentMonth();

		if (("${displayDateMonth}" != "10") && ("${displayDateMonth}" != "11") && ("${displayDateMonth}" != "12")) {
			var displayDateMonth= "0${displayDateMonth}";
		}

		var displayDateYear = DateUtil.getCurrentYear();

		var i = MathUtil.quotient("${displayDateDay}", "10");

		if ("${i}" == "0") {
			var displayDateDay= "0${displayDateDay}";
		}

		var displayDate = "${displayDateYear}-${displayDateMonth}-${displayDateDay}";

		Segmentation.viewSegment(
			criterion = "date",
			value = "${displayDate}");
	}

	@description = "This is a test for LPS-130285."
	@priority = "5"
	test AddSegmentByUserDateOfBirth {
		property portal.acceptance = "false";

		JSONUser.addUser(
			userEmailAddress = "userea@liferay.com",
			userFirstName = "userfn",
			userLastName = "userln",
			userScreenName = "usersn");

		JSONUser.setFirstPassword(
			agreeToTermsAndAnswerReminderQuery = "true",
			requireReset = "false",
			userEmailAddress = "userea@liferay.com");

		LexiconEntry.gotoAdd();

		Segmentation.addProperties(propertyOption = "Date of Birth");

		Segmentation.fillProperty(dateValue = "05/31/1986");

		Segmentation.fillTitle(titleField = "AddSegmentByUserDateOfBirth Test");

		Segmentation.viewMembers(memberName = "userfn userln");

		Button.clickSave();

		Alert.viewSuccessMessage();

		Segmentation.editSegment(entry = "AddSegmentByUserDateOfBirth Test");

		Segmentation.viewSegment(
			criterion = "date",
			value = "1986-05-31");
	}

	@description = "This is a test for LPS-130291."
	@priority = "5"
	test AddSegmentByUserEmailAddress {
		property portal.acceptance = "false";

		JSONUser.addUser(
			userEmailAddress = "userea@liferay.com",
			userFirstName = "userfn",
			userLastName = "userln",
			userScreenName = "usersn");

		JSONUser.setFirstPassword(
			agreeToTermsAndAnswerReminderQuery = "true",
			requireReset = "false",
			userEmailAddress = "userea@liferay.com");

		LexiconEntry.gotoAdd();

		Segmentation.addProperties(propertyOption = "Email Address");

		Segmentation.fillTitle(titleField = "AddSegmentByUserEmailAddress Test");

		Segmentation.changeCriterionInput(criterionInputOption = "Contains");

		Segmentation.fillProperty(propertyField = "liferay");

		Segmentation.viewMembers(memberName = "userfn userln");

		Button.clickSave();

		Alert.viewSuccessMessage();

		Segmentation.editSegment(entry = "AddSegmentByUserEmailAddress Test");

		Segmentation.viewSegment(propertyField = "liferay");
	}

	@description = "Validate if the user can create a segment with Properties User and Email Segment with Equals Option"
	@priority = "5"
	test AddSegmentByUserEmailAddressEquals {
		LexiconEntry.gotoAdd();

		Segmentation.addProperties(propertyOption = "Email Address");

		Segmentation.fillTitle(titleField = "AddSegmentUserEmailAddressEquals Test");

		Segmentation.changeCriterionInput(criterionInputOption = "Equals");

		Segmentation.fillProperty(propertyField = "liferay");

		Button.clickSave();

		Alert.viewSuccessMessage();
	}

	@description = "Validate if the user can create a segment with Properties User and Email Segment with Not Contains Option"
	@priority = "5"
	test AddSegmentByUserEmailAddressNotContains {
		LexiconEntry.gotoAdd();

		Segmentation.addProperties(propertyOption = "Email Address");

		Segmentation.fillTitle(titleField = "AddSegmentUserEmailAddressNotContains Test");

		Segmentation.changeCriterionInput(criterionInputOption = "Not Contains");

		Segmentation.fillProperty(propertyField = "liferay");

		Button.clickSave();

		Alert.viewSuccessMessage();
	}

	@description = "Validate if the user can create a segment with Properties User and Email Segment with Not Equals Option"
	@priority = "5"
	test AddSegmentByUserEmailAddressNotEquals {
		LexiconEntry.gotoAdd();

		Segmentation.addProperties(propertyOption = "Email Address");

		Segmentation.fillTitle(titleField = "AddSegmentUserEmailAddressNotEquals Test");

		Segmentation.changeCriterionInput(criterionInputOption = "Not Equals");

		Segmentation.fillProperty(propertyField = "liferay");

		Button.clickSave();

		Alert.viewSuccessMessage();
	}

	@description = "This is a test for LPS-130286."
	@priority = "5"
	test AddSegmentByUserFirstName {
		property portal.acceptance = "false";

		JSONUser.addUser(
			userEmailAddress = "userea@liferay.com",
			userFirstName = "userfn",
			userLastName = "userln",
			userScreenName = "usersn");

		JSONUser.setFirstPassword(
			agreeToTermsAndAnswerReminderQuery = "true",
			requireReset = "false",
			userEmailAddress = "userea@liferay.com");

		LexiconEntry.gotoAdd();

		Segmentation.addProperties(propertyOption = "First Name");

		Segmentation.fillTitle(titleField = "AddSegmentByUserFirstName Test");

		Segmentation.fillProperty(propertyField = "userfn");

		Segmentation.viewMembers(memberName = "userfn userln");

		Button.clickSave();

		Alert.viewSuccessMessage();

		Segmentation.editSegment(entry = "AddSegmentByUserFirstName Test");

		Segmentation.viewSegment(propertyField = "userfn");
	}

	@description = "This is a test for LPS-130287."
	@priority = "5"
	test AddSegmentByUserJobTitle {
		property portal.acceptance = "false";

		JSONUser.addUser(
			jobTitle = "QA",
			userEmailAddress = "userea@liferay.com",
			userFirstName = "userfn",
			userLastName = "userln",
			userScreenName = "usersn");

		JSONUser.setFirstPassword(
			agreeToTermsAndAnswerReminderQuery = "true",
			requireReset = "false",
			userEmailAddress = "userea@liferay.com");

		LexiconEntry.gotoAdd();

		Segmentation.addProperties(propertyOption = "Job Title");

		Segmentation.fillTitle(titleField = "AddSegmentByUserJobTitle Test");

		Segmentation.fillProperty(propertyField = "QA");

		Segmentation.viewMembers(memberName = "userfn userln");

		Button.clickSave();

		Alert.viewSuccessMessage();

		Segmentation.editSegment(entry = "AddSegmentByUserJobTitle Test");

		Segmentation.viewSegment(propertyField = "QA");
	}

	@description = "This is a test for LPS-130288."
	@priority = "5"
	test AddSegmentByUserLastName {
		property portal.acceptance = "false";

		JSONUser.addUser(
			userEmailAddress = "userea@liferay.com",
			userFirstName = "userfn",
			userLastName = "userln",
			userScreenName = "usersn");

		JSONUser.setFirstPassword(
			agreeToTermsAndAnswerReminderQuery = "true",
			requireReset = "false",
			userEmailAddress = "userea@liferay.com");

		LexiconEntry.gotoAdd();

		Segmentation.addProperties(propertyOption = "Last Name");

		Segmentation.fillTitle(titleField = "AddSegmentByUserLastName Test");

		Segmentation.fillProperty(propertyField = "userln");

		Segmentation.viewMembers(memberName = "userfn userln");

		Button.clickSave();

		Alert.viewSuccessMessage();

		Segmentation.editSegment(entry = "AddSegmentByUserLastName Test");

		Segmentation.viewSegment(propertyField = "userln");
	}

	@description = "This is a test for LPS-130292."
	@priority = "5"
	test AddSegmentByUserName {
		property portal.acceptance = "false";

		JSONUser.addUser(
			userEmailAddress = "userea@liferay.com",
			userFirstName = "userfn",
			userLastName = "userln",
			userScreenName = "usersn");

		JSONUser.setFirstPassword(
			agreeToTermsAndAnswerReminderQuery = "true",
			requireReset = "false",
			userEmailAddress = "userea@liferay.com");

		LexiconEntry.gotoAdd();

		Segmentation.addProperties(propertyOption = "Name");

		Segmentation.fillTitle(titleField = "AddSegmentByUserName Test");

		Segmentation.fillProperty(propertyField = "userfn userln");

		Segmentation.viewMembers(memberName = "userfn userln");

		Button.clickSave();

		Alert.viewSuccessMessage();

		Segmentation.editSegment(entry = "AddSegmentByUserName Test");

		Segmentation.viewSegment(propertyField = "userfn userln");
	}

	@description = "This is a test for LPS-130289."
	@priority = "5"
	test AddSegmentByUserRole {
		property portal.acceptance = "false";

		JSONUser.addUser(
			userEmailAddress = "userea@liferay.com",
			userFirstName = "userfn",
			userLastName = "userln",
			userScreenName = "usersn");

		JSONRole.addRegularRole(
			roleKey = "Regular Role",
			roleTitle = "Regular Role");

		JSONRole.assignRoleToUser(
			roleTitle = "Regular Role",
			userEmailAddress = "userea@liferay.com");

		LexiconEntry.gotoAdd();

		Segmentation.addProperties(propertyOption = "Regular Role");

		Segmentation.fillTitle(titleField = "AddSegmentByUserRole Test");

		Segmentation.fillProperty(selectCheckbox = "Regular Role");

		Segmentation.viewMembers(memberName = "userfn userln");

		Button.clickSave();

		Alert.viewSuccessMessage();

		Segmentation.editSegment(entry = "AddSegmentByUserRole Test");

		Segmentation.viewSegment(
			criterion = "select-input",
			value = "Regular Role");
	}

	@description = "This is a test for LPS-130290."
	@priority = "5"
	test AddSegmentByUserScreenName {
		property portal.acceptance = "false";

		JSONUser.addUser(
			userEmailAddress = "userea@liferay.com",
			userFirstName = "userfn",
			userLastName = "userln",
			userScreenName = "usersn");

		JSONUser.setFirstPassword(
			agreeToTermsAndAnswerReminderQuery = "true",
			requireReset = "false",
			userEmailAddress = "userea@liferay.com");

		LexiconEntry.gotoAdd();

		Segmentation.addProperties(propertyOption = "Screen Name");

		Segmentation.fillTitle(titleField = "AddSegmentByUserScreenName Test");

		Segmentation.fillProperty(propertyField = "usersn");

		Segmentation.viewMembers(memberName = "userfn userln");

		Button.clickSave();

		Alert.viewSuccessMessage();

		Segmentation.editSegment(entry = "AddSegmentByUserScreenName Test");

		Segmentation.viewSegment(propertyField = "usersn");
	}

	@description = "This is a test for LPS-132107."
	@priority = "5"
	test AddSegmentByUserSite {
		property portal.acceptance = "false";

		JSONUser.addUser(
			userEmailAddress = "userea@liferay.com",
			userFirstName = "userfn",
			userLastName = "userln",
			userScreenName = "usersn");

		JSONGroup.addGroup(groupName = "Test Site Name");

		JSONGroup.assignUserToGroup(
			groupName = "Test Site Name",
			userEmailAddress = "userea@liferay.com");

		LexiconEntry.gotoAdd();

		Segmentation.addProperties(propertyOption = "Site");

		Segmentation.fillTitle(titleField = "AddSegmentByUserSite Test");

		Segmentation.fillProperty(selectLink = "Test Site Name");

		Segmentation.viewMembers(memberName = "userfn userln");

		Button.clickSave();

		Alert.viewSuccessMessage();

		Segmentation.editSegment(entry = "AddSegmentByUserSite Test");

		Segmentation.viewSegment(
			criterion = "select-input",
			value = "Test Site Name");
	}

	@description = "This is a test for LPS-132108."
	@priority = "5"
	test AddSegmentByUserSiteOrganizationRole {
		property portal.acceptance = "false";
		property test.name.skip.portal.instance = "SegmentationCreateSegment#AddSegmentByUserSiteOrganizationRole";

		JSONUser.addUser(
			userEmailAddress = "userea@liferay.com",
			userFirstName = "userfn",
			userLastName = "userln",
			userScreenName = "usersn");

		JSONGroup.addGroup(groupName = "Test Site Name");

		JSONGroup.assignUserToGroup(
			groupName = "Test Site Name",
			userEmailAddress = "userea@liferay.com");

		JSONRole.addSiteRole(
			roleKey = "Site Role Name",
			roleTitle = "Site Role Name");

		JSONGroup.assignGroupRoleToUser(
			groupName = "Test Site Name",
			roleTitle = "Site Role Name",
			userEmailAddress = "userea@liferay.com");

		ApplicationsMenu.gotoPortlet(
			category = "Configuration",
			panel = "Control Panel",
			portlet = "Search");

		SearchAdministration.executeSearchActions(actionsDescription = "Reindex all search indexes.");

		Segmentation.openSegmentsAdmin(siteURLKey = "guest");

		LexiconEntry.gotoAdd();

		Segmentation.addProperties(propertyOption = "Site and Organization Role");

		Segmentation.fillProperty(selectCheckbox = "Site Role Name");

		Segmentation.fillTitle(titleField = "AddSegmentByUserSiteOrganizationRole Test");

		Segmentation.viewMembers(memberName = "userfn userln");

		Button.clickSave();

		Alert.viewSuccessMessage();

		Segmentation.editSegment(entry = "AddSegmentByUserSiteOrganizationRole Test");

		Segmentation.viewSegment(
			criterion = "select-input",
			value = "Site Role Name");
	}

	@description = "This is a test for LPS-132109."
	@priority = "5"
	test AddSegmentByUserTag {
		property portal.acceptance = "false";

		JSONUser.addUser(
			assetTagNames = "tagname",
			userEmailAddress = "userea@liferay.com",
			userFirstName = "userfn",
			userLastName = "userln",
			userScreenName = "usersn");

		LexiconEntry.gotoAdd();

		Segmentation.addProperties(propertyOption = "Tag");

		Segmentation.fillProperty(selectLink = "tagname");

		Segmentation.fillTitle(titleField = "AddSegmentByUserSiteOrganizationRole Test");

		Segmentation.viewMembers(memberName = "userfn userln");

		Button.clickSave();

		Alert.viewSuccessMessage();

		Segmentation.editSegment(entry = "AddSegmentByUserSiteOrganizationRole Test");

		Segmentation.viewSegment(
			criterion = "select-input",
			value = "tagname");
	}

	@description = "This is a test for LPS-132110."
	@priority = "5"
	test AddSegmentByUserTeam {
		property portal.acceptance = "false";

		JSONUser.addUser(
			userEmailAddress = "userea@liferay.com",
			userFirstName = "userfn",
			userLastName = "userln",
			userScreenName = "usersn");

		JSONGroup.addGroup(groupName = "Test Site Name");

		JSONGroup.assignUserToGroup(
			groupName = "Test Site Name",
			userEmailAddress = "userea@liferay.com");

		Site.openSiteTeamsAdmin(siteURLKey = "test-site-name");

		Team.addCP(
			teamDescription = "Site Team Description",
			teamName = "Site Team Name");

		Team.assignMembersCP(
			teamName = "Site Team Name",
			userScreenName = "usersn");

		Segmentation.openSegmentsAdmin(siteURLKey = "test-site-name");

		LexiconEntry.gotoAdd();

		Segmentation.addProperties(propertyOption = "Team");

		Segmentation.fillProperty(selectLink = "Site Team Name");

		Segmentation.fillTitle(titleField = "AddSegmentByUserTeam Test");

		Segmentation.viewMembers(memberName = "userfn userln");

		Button.clickSave();

		Alert.viewSuccessMessage();

		Segmentation.editSegment(entry = "AddSegmentByUserTeam Test");

		Segmentation.viewSegment(
			criterion = "select-input",
			value = "Site Team Name");
	}

	@description = "This is a test for LPS-132111."
	@priority = "5"
	test AddSegmentByUserUser {
		property portal.acceptance = "false";

		JSONUser.addUser(
			userEmailAddress = "userea@liferay.com",
			userFirstName = "userfn",
			userLastName = "userln",
			userScreenName = "usersn");

		LexiconEntry.gotoAdd();

		Segmentation.addProperties(propertyOption = "User");

		Segmentation.fillProperty(selectCheckbox = "userfn userln");

		Segmentation.fillTitle(titleField = "AddSegmentByUserUser Test");

		Segmentation.viewMembers(memberName = "userfn userln");

		Button.clickSave();

		Alert.viewSuccessMessage();

		Segmentation.editSegment(entry = "AddSegmentByUserUser Test");

		Segmentation.viewSegment(
			criterion = "select-input",
			value = "userfn userln");
	}

	@description = "This is a test for LPS-132112."
	@priority = "5"
	test AddSegmentByUserUserGroup {
		property portal.acceptance = "false";
		property test.name.skip.portal.instance = "SegmentationCreateSegment#AddSegmentByUserUserGroup";

		JSONUser.addUser(
			userEmailAddress = "userea@liferay.com",
			userFirstName = "userfn",
			userLastName = "userln",
			userScreenName = "usersn");

		JSONUserGroup.addUserGroup(
			userGroupDescription = "UG UserGroup Name Description",
			userGroupName = "UG UserGroup Name");

		JSONUser.addUserToUserGroup(
			userEmailAddress = "userea@liferay.com",
			userGroupName = "UG UserGroup Name");

		ApplicationsMenu.gotoPortlet(
			category = "Configuration",
			panel = "Control Panel",
			portlet = "Search");

		SearchAdministration.executeSearchActions(actionsDescription = "Reindex all search indexes.");

		Segmentation.openSegmentsAdmin(siteURLKey = "guest");

		LexiconEntry.gotoAdd();

		Segmentation.addProperties(propertyOption = "User Group");

		Segmentation.fillProperty(chooseItem = "UG UserGroup Name");

		Segmentation.fillTitle(titleField = "AddSegmentByUserUserGroup Test");

		Segmentation.viewMembers(memberName = "userfn userln");

		Button.clickSave();

		Alert.viewSuccessMessage();

		Segmentation.editSegment(entry = "AddSegmentByUserUserGroup Test");

		Segmentation.viewSegment(
			criterion = "select-input",
			value = "UG UserGroup Name");
	}

	@description = "Validate if the members are assigned correctly depending on the criteria selected"
	@ignore = "true"
	@priority = "5"
	test SegmentationCheckMembers {

		// TODO LPS-132013 It is a little bit flaky, waiting for fix

		property portal.acceptance = "true";

		JSONUser.addUser(
			userEmailAddress = "u1@liferay.com",
			userFirstName = "User",
			userLastName = "1",
			userScreenName = "u1");

		LexiconEntry.gotoAdd();

		Segmentation.addProperties(propertyOption = "Email Address");

		Segmentation.fillTitle(titleField = "Segment View Members");

		Segmentation.changeCriterionInput(criterionInputOption = "Contains");

		Segmentation.fillProperty(propertyField = "test");

		AssertTextEquals(
			locator1 = "Segmentation#MEMBERS_MATCHED",
			value1 = "1 Member");

		Segmentation.viewMembers(memberName = "Test");

		Segmentation.fillProperty(propertyField = "liferay");

		AssertTextEquals(
			locator1 = "Segmentation#MEMBERS_MATCHED",
			value1 = "2 Members");

		Segmentation.viewMembers(memberName = "Test");

		Segmentation.viewMembers(memberName = "User 1");

		Button.clickSave();

		Alert.viewSuccessMessage();
	}

	@description = "This is a use case for LPS-131815"
	@priority = "5"
	test SegmentationCheckSpecialCharacters {
		property portal.acceptance = "true";

		JSONUser.addUser(
			userEmailAddress = "u1@liferay.com",
			userFirstName = "User",
			userLastName = "1 + / ? # &",
			userScreenName = "u1");

		LexiconEntry.gotoAdd();

		Segmentation.fillTitle(titleField = "Segment With Special Characters");

		Segmentation.addProperties(propertyOption = "Last Name");

		Segmentation.changeCriterionInput(criterionInputOption = "Contains");

		Segmentation.fillProperty(propertyField = "+ / ? # &");

		AssertTextEquals(
			locator1 = "Segmentation#MEMBERS_MATCHED",
			value1 = "1 Member");

		Segmentation.viewMembers(memberName = "User 1 + / ? # &");

		Button.clickSave();

		Alert.viewSuccessMessage();
	}

	@description = "This is a use case for LPS-103516."
	@priority = "5"
	test ViewSegmentFieldsType {
		LexiconEntry.gotoAdd();
		for (var fieldType : list "User,Organization,Session") {
			AssertElementPresent(
				key_typeName = "${fieldType}",
				locator1 = "Segmentation#SEGMENT_FIELDS_TYPE");
		}
	}

}